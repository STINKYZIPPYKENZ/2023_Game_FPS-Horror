{
  "_id": "com.unity.scripting.python",
  "name": "com.unity.scripting.python",
  "description": "Python Scripting is an integration of the open-source Python for .NET project. This package provides the means to import the Python Runtime Environment as a namespace and execute Python scripts from the Unity Editor.",
  "provider": "upm",
  "category": "Editor",
  "dist-tags": {
    "latest": "6.0.1"
  },
  "versions": {
    "6.0.1": {
      "unity": "2019.4",
      "_upm": {
        "changelog": "* Fixes a race condition with the installation of pip packages on the first or clean startup of a Unity project."
      },
      "upmCi": {
        "footprint": "7eb08c53bb82d63b070bf1e19c20eab2f7822127"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.scripting.python@6.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.scripting.python.git",
        "type": "git",
        "revision": "0f72a3b9bb5af41c1cab9e5a6983bc2399c5d0cb"
      },
      "samples": [
        {
          "displayName": "PySide Camera Selector",
          "description": "Demonstrates how to build a custom tool with a PySide UI with two-way interaction with Unity: it inspects the Unity scene to get the list of cameras, but also Unity tells the UI when cameras are added.",
          "path": "Samples~/PySideExample"
        }
      ],
      "dist": {
        "shasum": "d3e3e4e92b6945c805f55f8e254e3e4f7ed7795a",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-6.0.1.tgz"
      },
      "name": "com.unity.scripting.python",
      "version": "6.0.1",
      "description": "Python Scripting is an integration of the open-source Python for .NET project. This package provides the means to import the Python Runtime Environment as a namespace and execute Python scripts from the Unity Editor.",
      "displayName": "Python Scripting",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "category": "Editor"
    },
    "7.0.0": {
      "unity": "2020.3",
      "_upm": {
        "changelog": "REMOVED\n* Removed the remnants of the Python Client API\n* Removed pycoverage initialization/config\n\nKNOWN ISSUES\n* Some Pypi libraries are Intel only on Mac\n\nCHANGES\n* Added a C# API to launch an external process with the PATH set up to point to the Python distribution.\n* Added a C# API to add pip packages\n* Added a C# API to add to site packages\n* Update minimum Unity version to 2020.3\n* Updated the binaries package to 1.3.0-pre.2, which upgrades Python to version 3.10.6"
      },
      "upmCi": {
        "footprint": "6a3ed03d09ba738640dcd86cfd7784f8473b2b60"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.scripting.python@7.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.scripting.python.git",
        "type": "git",
        "revision": "6320defdeeda2d70e2e606f03f16e0e04f02a821"
      },
      "samples": [
        {
          "displayName": "PySide Camera Selector",
          "description": "Demonstrates how to build a custom tool with a PySide UI with two-way interaction with Unity: it inspects the Unity scene to get the list of cameras, but also Unity tells the UI when cameras are added.",
          "path": "Samples~/PySideExample"
        }
      ],
      "dist": {
        "shasum": "d82821e028140aea8627ad54da05463504ed8400",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-7.0.0.tgz"
      },
      "name": "com.unity.scripting.python",
      "version": "7.0.0",
      "description": "Python Scripting is an integration of the open-source Python for .NET project. This package provides the means to import the Python Runtime Environment as a namespace and execute Python scripts from the Unity Editor.",
      "displayName": "Python Scripting",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "category": "Editor"
    },
    "7.0.0-pre.1": {
      "unity": "2020.3",
      "upmCi": {
        "footprint": "9b912739ee7180a8981daf10f75d53ea6bf62fc2"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.scripting.python.git",
        "type": "git",
        "revision": "19e10423eeda1a48789ef0eda2ad9e56cf0722e0"
      },
      "samples": [
        {
          "displayName": "PySide Camera Selector",
          "description": "Demonstrates how to build a custom tool with a PySide UI with two-way interaction with Unity: it inspects the Unity scene to get the list of cameras, but also Unity tells the UI when cameras are added.",
          "path": "Samples~/PySideExample"
        }
      ],
      "dist": {
        "shasum": "900c42864acdb1b7fe92b092628377c3a5038eec",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-7.0.0-pre.1.tgz"
      },
      "name": "com.unity.scripting.python",
      "version": "7.0.0-pre.1",
      "description": "Python Scripting is an integration of the open-source Python for .NET project. This package provides the means to import the Python Runtime Environment as a namespace and execute Python scripts from the Unity Editor.",
      "displayName": "Python Scripting",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "category": "Editor"
    },
    "6.0.0": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "288e60cafb72e868ec7910bdbf8860f174f1f732"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.scripting.python.git",
        "type": "git",
        "revision": "2e4dec578ed1a67b5dd5352ed4327a550f8e38a9"
      },
      "samples": [
        {
          "displayName": "PySide Camera Selector",
          "description": "Demonstrates how to build a custom tool with a PySide UI with two-way interaction with Unity: it inspects the Unity scene to get the list of cameras, but also Unity tells the UI when cameras are added.",
          "path": "Samples~/PySideExample"
        }
      ],
      "dist": {
        "shasum": "ef6c0586be958ff37124a3413712400843d305e6",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-6.0.0.tgz"
      },
      "name": "com.unity.scripting.python",
      "version": "6.0.0",
      "description": "Python Scripting is an integration of the open-source Python for .NET project. This package provides the means to import the Python Runtime Environment as a namespace and execute Python scripts from the Unity Editor.",
      "displayName": "Python Scripting",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "category": "Editor"
    },
    "5.0.0-pre.5": {
      "unity": "2019.4",
      "_upm": {
        "changelog": "* Updated the binaries package to 1.2.0-pre.2, which upgrades Python to version 3.9.10\n* Added Ubuntu 18.04, 20.04 support\n* Added native macOS arm64 support\n* Updated the Python for .NET DLL to 3.0.0-a2\n\nREMOVED\n* pip-tools is now packaged as part of the binary distribution"
      },
      "upmCi": {
        "footprint": "6d7ac996056a686304bde4a8f7e95c040208cdbc"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.scripting.python.git",
        "type": "git",
        "revision": "83b139a95ebacd4217c482655b2d5ad438a54b13"
      },
      "samples": [
        {
          "displayName": "PySide Camera Selector",
          "description": "Demonstrates how to build a custom tool with a PySide UI with two-way interaction with Unity: it inspects the Unity scene to get the list of cameras, but also Unity tells the UI when cameras are added.",
          "path": "Samples~/PySideExample"
        }
      ],
      "_id": "com.unity.scripting.python@5.0.0-pre.5",
      "_integrity": "sha512-47lICqy/zmFosiElX9m69/lzW8iNFgPcvj8hNo4qUPxtNUU6LB8TLyiKh81jBzNMJUWU3cS8/N+LnPXu9VRshg==",
      "_resolved": "/tmp/com.unity.scripting.python@5.0.0-pre.5-4a95p20z.tgz",
      "_from": "file:/tmp/com.unity.scripting.python@5.0.0-pre.5-4a95p20z.tgz",
      "dist": {
        "shasum": "477ae7d371de29d4dd8163e64c814d975f89c556",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-5.0.0-pre.5.tgz"
      },
      "name": "com.unity.scripting.python",
      "version": "5.0.0-pre.5",
      "description": "Python Scripting is an integration of the open-source Python for .NET project. This package provides the means to import the Python Runtime Environment as a namespace and execute Python scripts from the Unity Editor.",
      "displayName": "Python Scripting",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "category": "Editor"
    },
    "4.0.0-pre.1": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "7043f969919bf455fc121afa21b4a331309d3ff1"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.scripting.python.git",
        "type": "git",
        "revision": "be3b54ae2ec89f92b53edde7f2ac92f349741192"
      },
      "samples": [
        {
          "displayName": "PySide Camera Selector",
          "description": "Demonstrates how to build a custom tool with a PySide UI with two-way interaction with Unity: it inspects the Unity scene to get the list of cameras, but also Unity tells the UI when cameras are added.",
          "path": "Samples~/PySideExample"
        }
      ],
      "_id": "com.unity.scripting.python@4.0.0-pre.1",
      "_integrity": "sha512-stZ26Qh/HDYSJoJy+kG3pd3jp51ukyVl4w8ZWBApW1OOOnAXVSEaNTUwMlmJT8wA4z5NYv9B6QJxMloXKjlkuA==",
      "_resolved": "/pkgprom/com.unity.scripting.python-4.0.0-pre.1.tgz",
      "_from": "file:com.unity.scripting.python-4.0.0-pre.1.tgz",
      "dist": {
        "shasum": "0deb30867f43194b80843004deea68b1c04b43c3",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-4.0.0-pre.1.tgz"
      },
      "name": "com.unity.scripting.python",
      "version": "4.0.0-pre.1",
      "description": "An integration of Python for .NET delivered to your project through the Package Manager, Python for Unity provides your Unity project the means to import the Python Runtime Environment as a namespace and execute Python scripts from both inside the Unity editor and built applications.",
      "displayName": "Python for Unity",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "category": "Editor"
    },
    "4.0.0-exp.5": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "f4ffbb05a5985769620e3b147f7cb1c1e9c40a4b"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/com.unity.scripting.python.git",
        "type": "git",
        "revision": "e55c0d499772bf7151c2bae52c3b83bb53ae490c"
      },
      "samples": [
        {
          "displayName": "PySide Camera Selector",
          "description": "Demonstrates how to build a custom tool with a PySide UI with two-way interaction with Unity: it inspects the Unity scene to get the list of cameras, but also Unity tells the UI when cameras are added.",
          "path": "Samples~/PySideExample"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.scripting.python-4.0.0-exp.5.tgz",
      "_id": "com.unity.scripting.python@4.0.0-exp.5",
      "dist": {
        "shasum": "d5e5e88d6ac988115f0e9162fcf3aaf996044736",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-4.0.0-exp.5.tgz"
      },
      "name": "com.unity.scripting.python",
      "version": "4.0.0-exp.5",
      "description": "An integration of Python for .NET delivered to your project through the Package Manager, Python for Unity provides your Unity project the means to import the Python Runtime Environment as a namespace and execute Python scripts from both inside the Unity editor and built applications.",
      "displayName": "Python for Unity",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "category": ""
    },
    "2.1.1-preview.1": {
      "unity": "2019.3",
      "upmCi": {
        "footprint": "c2289e9fdb59cddf2e859579ad7529e0cef9fb69"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/com.unity.scripting.python.git",
        "type": "git",
        "revision": "5904a73e0064ab5a51a30e9598f3ace8bf691ad8"
      },
      "samples": [
        {
          "displayName": "Eval-exec example",
          "description": "Example client showing how to control a client from within Unity. Send exec() commands to the client to make it run Python commands. Send eval() commands to get the results. You can use the client as a base class for your own clients.",
          "path": "Samples~/EvalExecExample"
        },
        {
          "displayName": "PySide Camera Selector",
          "description": "Demonstrates how to build a custom tool with a PySide UI with two-way interaction with Unity: it inspects the Unity scene to get the list of cameras, but also Unity tells the UI when cameras are added.",
          "path": "Samples~/PySideExample"
        },
        {
          "displayName": "REPL client example",
          "description": "This sample shows how to build a client that sends commands to Unity from outside. It implements a read-eval-print loop (REPL). If you type in commands like `x = UnityEngine.Application.dataPath` they will be evaluated within Unity. The keyword `log` prints to the Unity Console and demonstrates how to make an asynchronous call.",
          "path": "Samples~/ReplClientExample"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.scripting.python-2.1.1-preview.1.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.scripting.python/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.scripting.python#readme",
      "_id": "com.unity.scripting.python@2.1.1-preview.1",
      "dist": {
        "shasum": "f79d3c3bd9cf88b51e582bd90a65942bbf60ec59",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-2.1.1-preview.1.tgz"
      },
      "name": "com.unity.scripting.python",
      "version": "2.1.1-preview.1",
      "description": "An integration of Python for .NET delivered to your project through the Package Manager, Python for Unity provides your Unity project the means to import the Python Runtime Environment as a namespace and execute Python scripts from both inside the Unity editor and built applications.",
      "displayName": "Python for Unity",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "category": "",
      "dependencies": {}
    },
    "2.1.0-preview.1": {
      "unity": "2019.3",
      "upmCi": {
        "footprint": "d2b333486073faaac2f5056656b97426240a6290"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/com.unity.scripting.python.git",
        "type": "git",
        "revision": "836452e1964869208f13bb10d5a76a7dacc62e3b"
      },
      "samples": [
        {
          "displayName": "Eval-exec example",
          "description": "Example client showing how to control a client from within Unity. Send exec() commands to the client to make it run Python commands. Send eval() commands to get the results. You can use the client as a base class for your own clients.",
          "path": "Samples~/EvalExecExample"
        },
        {
          "displayName": "PySide Camera Selector",
          "description": "Demonstrates how to build a custom tool with a PySide UI with two-way interaction with Unity: it inspects the Unity scene to get the list of cameras, but also Unity tells the UI when cameras are added.",
          "path": "Samples~/PySideExample"
        },
        {
          "displayName": "REPL client example",
          "description": "This sample shows how to build a client that sends commands to Unity from outside. It implements a read-eval-print loop (REPL). If you type in commands like `x = UnityEngine.Application.dataPath` they will be evaluated within Unity. The keyword `log` prints to the Unity Console and demonstrates how to make an asynchronous call.",
          "path": "Samples~/ReplClientExample"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.scripting.python-2.1.0-preview.1.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.scripting.python/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.scripting.python#readme",
      "_id": "com.unity.scripting.python@2.1.0-preview.1",
      "dist": {
        "shasum": "4b8e9eed50fa73d9083b90a119d6292399fea8cf",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-2.1.0-preview.1.tgz"
      },
      "name": "com.unity.scripting.python",
      "version": "2.1.0-preview.1",
      "description": "An integration of Python for .NET delivered to your project through the Package Manager, Python for Unity provides your Unity project the means to import the Python Runtime Environment as a namespace and execute Python scripts from both inside the Unity editor and built applications.",
      "displayName": "Python for Unity",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "category": "",
      "dependencies": {}
    },
    "2.0.1-preview.2": {
      "unity": "2019.3",
      "repository": {
        "footprint": "1268b6a11b9ada666d4591b354d6da6954a29bd8",
        "type": "git",
        "url": "git+https://github.com/Unity-Technologies/com.unity.scripting.python.git",
        "revision": "d8dc5dcb11d9ea9fe94fb82c5fff47b7d7e09451"
      },
      "samples": [
        {
          "displayName": "Eval-exec example",
          "description": "Example client showing how to control a client from within Unity. Send exec() commands to the client to make it run Python commands. Send eval() commands to get the results. You can use the client as a base class for your own clients.",
          "path": "Samples~/EvalExecExample"
        },
        {
          "displayName": "PySide Camera Selector",
          "description": "Demonstrates how to build a custom tool with a PySide UI with two-way interaction with Unity: it inspects the Unity scene to get the list of cameras, but also Unity tells the UI when cameras are added.",
          "path": "Samples~/PySideExample"
        },
        {
          "displayName": "REPL client example",
          "description": "This sample shows how to build a client that sends commands to Unity from outside. It implements a read-eval-print loop (REPL). If you type in commands like `x = UnityEngine.Application.dataPath` they will be evaluated within Unity. The keyword `log` prints to the Unity Console and demonstrates how to make an asynchronous call.",
          "path": "Samples~/ReplClientExample"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.scripting.python-2.0.1-preview.2.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.scripting.python/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.scripting.python#readme",
      "_id": "com.unity.scripting.python@2.0.1-preview.2",
      "dist": {
        "shasum": "fd54972e4d3aab1a91f33d4ec78b4307d6f913be",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-2.0.1-preview.2.tgz"
      },
      "name": "com.unity.scripting.python",
      "version": "2.0.1-preview.2",
      "description": "An integration of Python for .NET delivered to your project through the Package Manager, Python for Unity provides your Unity project the means to import the Python Runtime Environment as a namespace and execute Python scripts from both inside the Unity editor and built applications.",
      "displayName": "Python for Unity",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "dependencies": {}
    },
    "2.0.0-preview.6": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/com.unity.scripting.python.git",
        "revision": "81d55e4fb8f9ff7e8479ffb32e87329b15bcf273"
      },
      "dist": {
        "shasum": "ae87a1503bdd220e54c89c71799fd1f232e1f80e",
        "tarball": "https://download.packages.unity.com/com.unity.scripting.python/-/com.unity.scripting.python-2.0.0-preview.6.tgz"
      },
      "scripts": {},
      "_id": "com.unity.scripting.python@2.0.0-preview.6",
      "unity": "2019.3",
      "name": "com.unity.scripting.python",
      "version": "2.0.0-preview.6",
      "description": "An integration of Python for .NET delivered to your project through the Package Manager, Python for Unity provides your Unity project the means to import the Python Runtime Environment as a namespace and execute Python scripts from both inside the Unity editor and built applications.",
      "displayName": "Python for Unity",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "python",
        "python.net"
      ],
      "dependencies": {}
    }
  },
  "etag": "\"8385072cb3f8c3561894de023ea90f07\"",
  "time": {
    "6.0.1": "2023-03-31T14:13:03Z",
    "7.0.0": "2023-03-14T15:30:57Z",
    "7.0.0-pre.1": "2022-10-12T14:42:55Z",
    "6.0.0": "2022-08-23T10:55:02Z",
    "5.0.0-pre.5": "2022-05-04T19:13:16Z",
    "4.0.0-pre.1": "2021-10-28T16:01:07Z",
    "4.0.0-exp.5": "2021-03-29T20:20:31Z",
    "2.1.1-preview.1": "2020-08-17T15:04:04Z",
    "2.1.0-preview.1": "2020-07-20T17:37:20Z",
    "2.0.1-preview.2": "2020-02-14T16:01:38Z",
    "2.0.0-preview.6": "2020-01-08T23:05:37Z"
  }
}
