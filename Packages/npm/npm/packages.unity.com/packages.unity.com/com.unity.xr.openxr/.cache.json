{
  "_id": "com.unity.xr.openxr",
  "name": "com.unity.xr.openxr",
  "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
  "provider": "upm",
  "category": "",
  "dist-tags": {
    "latest": "1.8.1"
  },
  "versions": {
    "1.8.1": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "_upm": {
        "changelog": "### Added\n* Added functionality in `OpenXRFeatureBuildHooks` exposing the BootConfig for reading/writing.\n* Added `Force Remove Internet Permission` setting to the Meta Quest Feature settings, allowing to remove Internet permissions added automatically to the application manifest.\n* Added class HPReverbG2ControllerProfile.ReverbG2Controller and a new interaction profile to support the HP Reverb G2 controllers.\n* Added Hand Interaction Profile and added PalmPose and dpad EXT implementations. \n\n### Changed\n* Modified `ModifyAndroidManifestMeta` class to provide required Android manifest entries using a new internal XR system, instead of manually modifying the manifest file.\n* Updated the IsTracked and TrackingState Input Features names with a Usage prefix to prevent name collisions.\n* Updated OpenXR loader to 1.0.27.\n\n### Fixed\n* Fixed type `XrCompositionLayerPassthroughFB` not appearing in the runtime debugger.\n* Fixed crash when deploying to Android on Unity 2023 due to using type `Activity` over `GameActivity`.\n* Fixed issue on Android where screen captures only capture the view on one eye."
      },
      "upmCi": {
        "footprint": "2784ee6512cff26dd408919e59ad1371268394d7"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.8/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "45f13b26a02832b14dd93ff3d908779c3f9c6970"
      },
      "dist": {
        "shasum": "5d1f0362f3e5da6894265413b44024ceaff3bdec",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.8.1.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.8.1",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "assets",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.4.4",
        "com.unity.xr.core-utils": "2.1.1"
      }
    },
    "1.8.0": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "_upm": {
        "changelog": "### Added\n* Added functionality in `OpenXRFeatureBuildHooks` exposing the BootConfig for reading/writing.\n* Added `Force Remove Internet Permission` setting to the Meta Quest Feature settings, allowing to remove Internet permissions added automatically to the application manifest.\n* Added class HPReverbG2ControllerProfile.ReverbG2Controller and a new interaction profile to support the HP Reverb G2 controllers.\n* Added Hand Interaction Profile and added PalmPose and dpad EXT implementations. \n\n### Changed\n* Modified `ModifyAndroidManifestMeta` class to provide required Android manifest entries using a new internal XR system, instead of manually modifying the manifest file.\n* Updated the IsTracked and TrackingState Input Features names with a Usage prefix to prevent name collisions.\n* Updated OpenXR loader to 1.0.27.\n\n### Fixed\n* Fixed type `XrCompositionLayerPassthroughFB` not appearing in the runtime debugger.\n* Fixed crash when deploying to Android on Unity 2023 due to using type `Activity` over `GameActivity`.\n* Fixed issue on Android where screen captures only capture the view on one eye."
      },
      "upmCi": {
        "footprint": "55675ab8f8bc72a8aa0e96e9ea177c0b5aef0c2c"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.8/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "09ba060e4dc66758c7b1b374c17177da07bff191"
      },
      "dist": {
        "shasum": "23f9a48d229b16ec5b4f16009137bffffd4a5614",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.8.0.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.8.0",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.4.4",
        "com.unity.xr.core-utils": "2.1.1"
      }
    },
    "1.7.0": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "_upm": {
        "changelog": "### Fixed\n* Fixed - Meta builds now don't include Bluetooth permissions in Android manifest by default when using Microphone class in script code.\n* Fixed crash in OpenXR runtime debugger when cache size is set to 0.\n* Fixed OpenXR project validation to check for correct versions of OpenGLES in Unity 2023 and up.\n* Fixed crash when runtime reports an invalid view configuration from xrWaitFrame.\n* Fixed - OpenXR plugin will only look up functions from supported and enabled extensions.\n* Fixed GPU selection in multi-GPU scenarios.\n\n### Updated\n* Updated documentation for the Meta Quest feature.\n\n### Added\n* Added API `OpenXRRuntime.retryInitializationOnFormFactorErrors` to retry xrGetSystem during initialization if xrGetSystem returns a form factor error.\n* Enable XR_META_performance_metrics. This enables performance stats for Meta Quest devices on OpenXR. \n* Add class MetaQuestTouchProControllerProfile.QuestProTouchController new interaction profile to support Meta Quest pro controllers.\n* Added ability for OpenXRFeature derived classes to add Awake() functions.\n* Added API `OpenXRInput.GetActionIsActive` to check whether an InputAction has any bindings which are currently active.\n* Added API `OpenXRInput.GetActionHandle` to get the action handle of an InputAction and returns 0 if not found."
      },
      "upmCi": {
        "footprint": "cbe9b1c244e0898ca817801a74902e4497ea0892"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.7/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "6a1990de9658294dd93a1f786585fe9878eac1eb"
      },
      "dist": {
        "shasum": "e981e46fd0f010aeddfce5ba2738a3a538a7bcab",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.7.0.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.7.0",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.4.4"
      }
    },
    "1.6.0": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "0307ba2a0127885fc426b598c4b292b6e9d11a60"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.openxr@1.6/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "e0ea9b26e3d27a43f8e54b4d93d561b0aa739d58"
      },
      "dist": {
        "shasum": "a6a229861f4c1f40be37490e1bea8e5fba521569",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.6.0.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.6.0",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.4.4"
      }
    },
    "1.5.3": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "acf062eef3bb75da1de36c2c8508fa7afb431f9d"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "f465b6468dde9034f804c326cd531c81dcb8e2c3"
      },
      "dist": {
        "shasum": "9aba46c23bab93ee729e14142a9522a8db93d23e",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.5.3.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.5.3",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.4.2"
      }
    },
    "1.5.1": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "a63d752051b9b39db9ff026ac9f2e298dd45f37d"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "4a5c45fe4e8656318b571f257f3dc1632aff19aa"
      },
      "dist": {
        "shasum": "9af67fa96e920edc97cd4d01578665f283ae6838",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.5.1.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.5.1",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.4.1"
      }
    },
    "1.5.0": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "_upm": {
        "changelog": "### Fixed\n* Fixed compilation errors on Game Core platforms where `ENABLE_VR` is not currently defined. Requires Input System 1.4.0 or newer.\n* Fixed an issue that was causing Oculus Android Vulkan builds rendering broken after sleep / awake HMD.\n* Fixed Oculus controllers tracking issues when both OpenXR package and Oculus package are installed in the project.\n* Fixed an issue in Play Mode OpenXR Runtime selection that `Other` option would be reverted to `System Default` after entering and exiting playmode.\n* Fixed a bug in `XR_VARJO_quad_views` support.\n\n### Updated\n* Updated Oculus Android manifest with focusAware, supportedDevices and headTracking tags added. Also added a new validation rule to check if Oculus target devices are selected.\n* Updated OpenXR Loader to 1.0.23.\n* Updated Input System dependency to 1.4.1.\n\n### Added\n* Added generic Project Validation status in the **Project Settings** window under **XR Plug-in Management** if you have [XR Core Utilities](https://docs.unity3d.com/Packages/com.unity.xr.core-utils@latest) 2.1.0 or later installed. These results include the checks for all XR plug-ins that provide validation rules.\n* Added API `OpenXRFeature.SetEnvironmentBlendMode` to set the current XR Environment Blend Mode if it is supported by the active runtime. If not supported, fall back  to the runtime preference.\n* Added API `OpenXRFeature.GetEnvironmentBlendMode` to return the current XR Environment Blend Mode.\n* Added support for `XR_MSFT_holographic_windown_attachment` extension on UWP so that installing Microsoft Mixed Reality OpenXR Plug-in is no longer required if targeting HoloLens V2 devices. And removed corresponding project validator. \n* Added support for `XR_FB_foveation`, `XR_FB_foveation_configuration`, `XR_FB_swapchain_update_state`, `XR_FB_foveation_vulkan` and `XR_FB_space_warp` extensions.\n* Added ability to recover the application after Oculus Link was aborted and re-established. Attempt to restart every 5 seconds after Link disconnected.\n* Added validation rule for duplicate settings in OpenXRPackageSettings.asset."
      },
      "upmCi": {
        "footprint": "4fe36d6817faf2a05782290f56de00fa4ecbfe73"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "c326785d153255c6c85bfec8282ae96733d270bd"
      },
      "dist": {
        "shasum": "c59a3145176fcdfeeace42c70e94e8bceac1c785",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.5.0.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.5.0",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.4.1"
      }
    },
    "1.5.0-exp.1": {
      "_integrity": "sha512-iq+KzDylTpKcq3mzgRmWxVwE4RPe1gFJrDB2bhGOsyNLSiX4Wvi8DAV3xigJi086p4/Xu66WWngxX/OITsYg3w==",
      "dist": {
        "shasum": "e1250a668aa94634c1fab4b91f7e5e07cc26508d",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.5.0-exp.1.tgz"
      },
      "unityRelease": "0b14",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "4d9896e51d41b2e51eb5ca89f28e8f3bba273ea9"
      },
      "_resolved": "/tmp/com.unity.xr.openxr@1.5.0-exp.1-ozkxv724.tgz",
      "_upm": {
        "changelog": "### Fixed\n* Fixed compilation errors on Game Core platforms where `ENABLE_VR` is not currently defined. Requires Input System 1.4.0 or newer.\n* Fixed an issue that was causing Oculus Android Vulkan builds rendering broken after sleep / awake HMD.\n* Fixed Oculus controllers tracking issues when both OpenXR package and Oculus package are installed in the project.\n* Fixed an issue in Play Mode OpenXR Runtime selection that `Other` option would be reverted to `System Default` after entering and exiting playmode.\n* Fixed a bug in `XR_VARJO_quad_views` support.\n\n### Updated\n* Updated Oculus Android manifest with focusAware, supportedDevices and headTracking tags added. Also added a new validation rule to check if Oculus target devices are selected.\n* Updated OpenXR Loader to 1.0.23.\n* Updated Input System dependency to 1.4.1.\n\n### Added\n* Added **experimental** support for Late Latching Head node when using Vulkan.\n* Added generic Project Validation status in the **Project Settings** window under **XR Plug-in Management** if you have [XR Core Utilities](https://docs.unity3d.com/Packages/com.unity.xr.core-utils@latest) 2.1.0 or later installed. These results include the checks for all XR plug-ins that provide validation rules.\n* Added API `OpenXRFeature.SetEnvironmentBlendMode` to set the current XR Environment Blend Mode if it is supported by the active runtime. If not supported, fall back  to the runtime preference.\n* Added API `OpenXRFeature.GetEnvironmentBlendMode` to return the current XR Environment Blend Mode.\n* Added support for `XR_MSFT_holographic_windown_attachment` extension on UWP so that installing Microsoft Mixed Reality OpenXR Plug-in is no longer required if targeting HoloLens V2 devices. And removed corresponding project validator. \n* Added support for `XR_FB_foveation`, `XR_FB_foveation_configuration`, `XR_FB_swapchain_update_state`, `XR_FB_foveation_vulkan` and `XR_FB_space_warp` extensions.\n* Added ability to recover the application after Oculus Link was aborted and re-established. Attempt to restart every 5 seconds after Link disconnected."
      },
      "unity": "2020.3",
      "samples": [
        {
          "path": "Samples~/Controller",
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system."
        },
        {
          "path": "Samples~/MeshingFeature",
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background."
        },
        {
          "path": "Samples~/InterceptFeature",
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method."
        }
      ],
      "_from": "file:/tmp/com.unity.xr.openxr@1.5.0-exp.1-ozkxv724.tgz",
      "_id": "com.unity.xr.openxr@1.5.0-exp.1",
      "upmCi": {
        "footprint": "c41f8a946020c665c643f256629853f7417ab8b1"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.5.0-exp.1",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.4.1"
      }
    },
    "1.4.2": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "_upm": {
        "changelog": "### Fixed\n* Fixed unnecessary destroying session on pause and resume."
      },
      "upmCi": {
        "footprint": "41ee4ffd81a33884c53333099e04426831095bd6"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "9f7014aa33bf536ec867484ee501dec6c2a4bc16"
      },
      "_id": "com.unity.xr.openxr@1.4.2",
      "_integrity": "sha512-GwKZKUOCzLXTtFj1itIKfZCHLjemR84iVTC+m15SIoYIUDXWX0Svomw5qpGW1FERUytUynYxrHH8ZG0LaAStlA==",
      "_resolved": "/tmp/com.unity.xr.openxr@1.4.2-7h0736qw.tgz",
      "_from": "file:/tmp/com.unity.xr.openxr@1.4.2-7h0736qw.tgz",
      "dist": {
        "shasum": "fba16e0187735e41e4783a7f342db3db1cb9ed46",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.4.2.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.4.2",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.3.0"
      }
    },
    "1.4.1": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upm": {
        "changelog": "### Fixed\n* Fixed an issue that would cause failure to load OpenXR loader when non-ascii characters in project path.\n* Fixed an editor crash issue when updating OpenXR package version and then enter Playmode.\n* Fixed `EyeGaze` functionality not working in the `Controller` sample.\n* Fixed Oculus `MenuButton` not being recognized in script.\n* Fixed an issue that some OpenXR Editor settings not being serialized properly.\n* Fixed `Failed to suggest bindings for interaction profile` console error spamming when a runtime doesn't support a certain interaction profile.\n\n### Updated\n* Updated OpenXR Loader to 1.0.20.\n* Updated Render Mode naming to Single Pass Instanced / Multiview for Android platform.\n* Updated Input System dependency to 1.3.0.\n* Updated XR mirror view to be based on the occlusion mesh line loop data obtained from `xrGetVisibilityMaskKHR`.\n\n### Added\n* Added runtime failures handling to completely shut down OpenXR when runtime error occurred.\n* Added support to dynamically discover runtimes by registry key.\n* Added logging for no MainCamera tag detected when depthSubmission mode enabled.\n* Added console error logging if entering playmode on unsupported platforms.\n* Added support to automatically open OpenXR project validator if any issues detected after package update.\n* Added API `OpenXRFeature.GetViewConfigurationTypeForRenderPass`, which returns viewConfigurationType for the given renderPass index.\n* Added pre-init support for UWP / WSA platform. Note: OpenXR got unchecked by upgrading to this version (only on UWP), but options chosen under `Features` remained as they were."
      },
      "upmCi": {
        "footprint": "58198a01010057b814e06dbb0a7b20360326793c"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "3e32a6803be6624fae3cad273ca346404003bd5f"
      },
      "_id": "com.unity.xr.openxr@1.4.1",
      "_integrity": "sha512-O00mzVhzPFDwavrDShXvARX2wU26LHnSxLA+PD+an0nC9joYgzjzKhV2LQ5rDj/bXIOP6qUxcK8Akp5Vuih2WA==",
      "_resolved": "/tmp/com.unity.xr.openxr@1.4.1-o3ywdqio.tgz",
      "_from": "file:/tmp/com.unity.xr.openxr@1.4.1-o3ywdqio.tgz",
      "dist": {
        "shasum": "4e515b87788a3e720a3501cb4c57bbba753262c8",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.4.1.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.4.1",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.3.0"
      }
    },
    "1.4.0": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upm": {
        "changelog": "### Fixed\n* Fixed an issue that would cause failure to load OpenXR loader when non-ascii characters in project path.\n* Fixed an editor crash issue when updating OpenXR package version and then enter Playmode.\n* Fixed `EyeGaze` functionality not working in the `Controller` sample.\n* Fixed Oculus `MenuButton` not being recognized in script.\n* Fixed an issue that some OpenXR Editor settings not being serialized properly.\n* Fixed `Failed to suggest bindings for interaction profile` console error spamming when a runtime doesn't support a certain interaction profile.\n\n### Updated\n* Updated OpenXR Loader to 1.0.20.\n* Updated Render Mode naming to Single Pass Instanced / Multiview for Android platform.\n* Updated Input System dependency to 1.3.0.\n* Updated XR mirror view to be based on the occlusion mesh line loop data obtained from `xrGetVisibilityMaskKHR`.\n\n### Added\n* Added runtime failures handling to completely shut down OpenXR when runtime error occurred.\n* Added support to dynamically discover runtimes by registry key.\n* Added logging for no MainCamera tag detected when depthSubmission mode enabled.\n* Added console error logging if entering playmode on unsupported platforms.\n* Added support to automatically open OpenXR project validator if any issues detected after package update.\n* Added API `OpenXRFeature.GetViewConfigurationTypeForRenderPass`, which returns viewConfigurationType for the given renderPass index.\n* Added pre-init support for UWP / WSA platform. Note: OpenXR got unchecked by upgrading to this version (only on UWP), but options chosen under `Features` remained as they were."
      },
      "upmCi": {
        "footprint": "cfb708c220fa1643061f345f17345ad1e171d5c5"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "0ea7721f8adbc97e8af1ee57f51e44622961e23e"
      },
      "_id": "com.unity.xr.openxr@1.4.0",
      "_integrity": "sha512-BVWhpU46IqLA6XrwaUcucl6K+K8+B+i62ObQyrSFizQd5mQO8KSHwNWKcrfIivIDYmUwz+8IKAcqI4v4rMuL/w==",
      "_resolved": "/tmp/com.unity.xr.openxr@1.4.0-ixj1xll0.tgz",
      "_from": "file:/tmp/com.unity.xr.openxr@1.4.0-ixj1xll0.tgz",
      "dist": {
        "shasum": "0ce2f6015e8928ae94b57b8fcece4cc1268f7212",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.4.0.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.4.0",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.3.0"
      }
    },
    "1.3.1": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "ba72fdf172ba9d700affa8957caf31380e92d1fb"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "dd3e43afc5c298c91f87b3f41a640f4d0c1da50e"
      },
      "_id": "com.unity.xr.openxr@1.3.1",
      "_integrity": "sha512-S8Vb1F/jWalnFmcMrbGneX/RLvVdMq2AHqcufZO5blJjWuaqgbwNC/xDgxAGi1UiS9oxJ6dtxJC8/qi1xI22ng==",
      "_resolved": "/pkgprom/com.unity.xr.openxr-1.3.1.tgz",
      "_from": "file:com.unity.xr.openxr-1.3.1.tgz",
      "dist": {
        "shasum": "573b07b19e57266bc34ed7c5bce4f8adc0a7bc58",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.3.1.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.3.1",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.0.2"
      }
    },
    "1.3.0": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "ab037109b4c6851361fea29632bf0668faf96ee7"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "969d286b84b4009f996f43186c37a68f3350aab3"
      },
      "_id": "com.unity.xr.openxr@1.3.0",
      "_integrity": "sha512-AaprnOhUkSYUT3gNdBq4EdgY5NR7FRhzKbCqfsDd7kYxDFnbDaKVMhG9wxTUA0YVmBwavPpAXTNIFudWxaGWxw==",
      "_resolved": "/pkgprom/com.unity.xr.openxr-1.3.0.tgz",
      "_from": "file:com.unity.xr.openxr-1.3.0.tgz",
      "dist": {
        "shasum": "a92d8b55541db4581bfe456382c601cc145e1ec1",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.3.0.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.3.0",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.0.2"
      }
    },
    "1.2.8": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "359ec208a5cf45b33f1cf30c2d44d1239a41d226"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "9c83bf2d4143ac7632a273fbc236ff5636d6fd71"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.openxr-1.2.8.tgz",
      "_id": "com.unity.xr.openxr@1.2.8",
      "dist": {
        "shasum": "21557e85683c3105c081abb5eca58beffe16c192",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.2.8.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.2.8",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.0.2"
      }
    },
    "1.2.3": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "bcea9c6d07f1d0da17b5851ab0fe03b2de57cebf"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "683b7326f78d42b2fa865f94f5e1163d7ab0aa72"
      },
      "_id": "com.unity.xr.openxr@1.2.3",
      "dist": {
        "shasum": "fe6f850d1c155006e5949f008aa29988cb63f257",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.2.3.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.2.3",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.0.2"
      }
    },
    "1.2.2": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "01296535c12d139ffff7bf76c1b1c04be5ed27e4"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "c446c32bb70a9d9b6fd9d24890111c53249dbdf0"
      },
      "_id": "com.unity.xr.openxr@1.2.2",
      "dist": {
        "shasum": "4a3606b80f569881aff10d273c7134d8140b3d0a",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.2.2.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.2.2",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.0.2"
      }
    },
    "1.2.0": {
      "unity": "2020.3",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "18b782c568d44fc7341b85ff5daf8f3e8d9480e3"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "457e10826af15117a28ba2160629f587074894a1"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.openxr-1.2.0.tgz",
      "_id": "com.unity.xr.openxr@1.2.0",
      "dist": {
        "shasum": "c79fd9fa16a5efd1ca34e6a9be89981e903fc1c2",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.2.0.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.2.0",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.0.2"
      }
    },
    "1.1.1": {
      "unity": "2020.2",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "d1806d2dd73e07d979446411f7daab0dffb21fde"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "385943b78c1ad69f8096e3820beca29305960a9f"
      },
      "_id": "com.unity.xr.openxr@1.1.1",
      "dist": {
        "shasum": "86dbf118410c8133c9e5d60a776ab38d1c541bad",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.1.1.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.1.1",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.0.2"
      }
    },
    "1.0.3": {
      "unity": "2020.2",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "bf81a38ac02f56369ebaaa8310d0a9716e97aba6"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "82546898438f3e4ef3f1e52e008ca0b93c722c9a"
      },
      "_id": "com.unity.xr.openxr@1.0.3",
      "dist": {
        "shasum": "838b65b8f7f46f48c2f973e5e76fa45819fbb406",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.0.3.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.0.3",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.0.2"
      }
    },
    "1.0.2": {
      "unity": "2020.2",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "9b83557b220857cadf5481bf677d88e54c58ea39"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "297b6c200ee5dc8d53e77c5d931f18bcaa3ce556"
      },
      "_id": "com.unity.xr.openxr@1.0.2",
      "dist": {
        "shasum": "27feb146b9669cca798506c9a68e339cddd699e0",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.0.2.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.0.2",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.0.2"
      }
    },
    "1.0.0-pre.1": {
      "unity": "2021.1",
      "unityRelease": "0b3",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "cc31aaf1bfa4feb228f3486786c1e637f5b7f388"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "735e27dcbedfd1682ca7b9c40bb48a34f9d215c2"
      },
      "_id": "com.unity.xr.openxr@1.0.0-pre.1",
      "dist": {
        "shasum": "0f0db0198a621ebe951f8da1658d96702511af34",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-1.0.0-pre.1.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "1.0.0-pre.1",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.1",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.0.2"
      }
    },
    "0.1.2-preview.2": {
      "unity": "2020.2",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system.",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "b17d42b750df3eded68075dede5663f1be36efee"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "8621e12ff34382c8a02cf25e5728c4c2ef41b474"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.openxr-0.1.2-preview.2.tgz",
      "_id": "com.unity.xr.openxr@0.1.2-preview.2",
      "dist": {
        "shasum": "3474aacfc03793835869daf0381884795bec1933",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-0.1.2-preview.2.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "0.1.2-preview.2",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.0-pre.2",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.1.0-preview.1"
      }
    },
    "0.1.1-preview.1": {
      "unity": "2020.2",
      "unityRelease": "0b14",
      "samples": [
        {
          "displayName": "Controller",
          "description": "Basic sample showing how to create and reference OpenXR action maps with the new input system",
          "path": "Samples~/Controller"
        },
        {
          "displayName": "Meshing Subsystem Feature",
          "description": "Shows a teapot mesh generated from native mesh subsystem with physics baked in background.",
          "path": "Samples~/MeshingFeature"
        },
        {
          "displayName": "Intercept Feature",
          "description": "Demonstrates how to intercept an OpenXR method.",
          "path": "Samples~/InterceptFeature"
        }
      ],
      "upmCi": {
        "footprint": "b17c6aea3cdc81ed60fafa7240373b4ef89e5f49"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/xr.sdk.openxr.git",
        "type": "git",
        "revision": "0297a82a33c5b22a7cd428453841f41a11ce9567"
      },
      "_id": "com.unity.xr.openxr@0.1.1-preview.1",
      "dist": {
        "shasum": "2cd76cd556f8d913ebfa693d1d1506b7bbad2567",
        "tarball": "https://download.packages.unity.com/com.unity.xr.openxr/-/com.unity.xr.openxr-0.1.1-preview.1.tgz"
      },
      "name": "com.unity.xr.openxr",
      "version": "0.1.1-preview.1",
      "description": "OpenXR is an open, royalty-free standard developed by Khronos that aims to simplify AR/VR development by allowing developers to target a wide range of AR/VR devices. Use this plug-in to enable OpenXR in XR Plug-in Management.",
      "displayName": "OpenXR Plugin",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "openxr",
        "xr",
        "reality",
        "xreditorsubsystem"
      ],
      "category": "",
      "dependencies": {
        "com.unity.xr.management": "4.0.0-pre.2",
        "com.unity.xr.legacyinputhelpers": "2.1.2",
        "com.unity.inputsystem": "1.1.0-preview.1"
      }
    }
  },
  "etag": "\"fcf0edb929a04188fbe3048f0291a3f3\"",
  "time": {
    "1.8.1": "2023-06-13T08:39:48Z",
    "1.8.0": "2023-06-01T14:10:09Z",
    "1.7.0": "2023-03-07T12:14:00Z",
    "1.6.0": "2022-12-01T14:11:28Z",
    "1.5.3": "2022-09-29T19:33:14Z",
    "1.5.1": "2022-08-15T07:51:46Z",
    "1.5.0": "2022-08-12T08:43:58Z",
    "1.5.0-exp.1": "2022-07-21T15:38:49Z",
    "1.4.2": "2022-05-17T18:34:11Z",
    "1.4.1": "2022-04-14T16:58:53Z",
    "1.4.0": "2022-04-11T20:43:38Z",
    "1.3.1": "2021-12-02T06:04:41Z",
    "1.3.0": "2021-11-11T16:13:57Z",
    "1.2.8": "2021-08-02T15:50:30Z",
    "1.2.3": "2021-06-28T17:19:46Z",
    "1.2.2": "2021-06-02T18:51:04Z",
    "1.2.0": "2021-05-18T14:50:56Z",
    "1.1.1": "2021-04-08T18:18:02Z",
    "1.0.3": "2021-03-18T20:06:57Z",
    "1.0.2": "2021-02-11T19:42:56Z",
    "1.0.0-pre.1": "2021-02-11T19:26:19Z",
    "0.1.2-preview.2": "2021-01-05T17:57:41Z",
    "0.1.1-preview.1": "2020-12-16T22:19:19Z"
  }
}
