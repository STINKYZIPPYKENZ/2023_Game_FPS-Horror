{
  "_id": "com.unity.xr.interaction.toolkit",
  "name": "com.unity.xr.interaction.toolkit",
  "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
  "provider": "upm",
  "category": "XR",
  "dist-tags": {
    "latest": "2.4.0"
  },
  "versions": {
    "2.4.0": {
      "unity": "2021.3",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        },
        {
          "displayName": "Tunneling Vignette",
          "description": "Assets to let users set up and configure tunneling vignette effects as a comfort mode option.",
          "path": "Samples~/Tunneling Vignette"
        },
        {
          "displayName": "Meta Gaze Adapter",
          "description": "This sample provides an example to get eye tracking working with the Meta Quest Pro and the XRI Gaze Interactor.",
          "path": "Samples~/Meta Gaze Adapter"
        },
        {
          "displayName": "Hands Interaction Demo",
          "description": "Sample scene and other assets for hand-tracking integration with the XR Interaction Toolkit.",
          "path": "Samples~/Hands Interaction Demo"
        }
      ],
      "_upm": {
        "changelog": "### Changed\n- Project Settings for the XR Interaction Toolkit have been moved under the category **XR Plug-in Management** to consolidate XR configuration.\n- Project validation rules for the XR Interaction Toolkit and samples have been updated to use global XR project validation and will now appear in the **Edit** &gt; **Project Settings** &gt; **XR Plug-in Management** &gt; **Project Validation** window.\n- Changed `Reset` method of behaviors to no longer assign a reference to an XR Interaction Manager or XR Origin.\n- Changed XR Interactable Affordance State Provider component's default value to Ignore Focus Events.\n- Changed affordance receivers to log a warning when the affordance theme data is missing potential affordance states. A new affordance state `focused` at array index 6 was added to the affordance theme assets in the samples. Users will need to reimport the Starter Assets and Hands Interaction Demo samples or add the `focused` state to their affordance theme assets.\n\n### Fixed\n- Fixed an issue with the XR Distance evaluator not calculating the proper distance from trigger colliders. ([XRIT-71](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-71))\n- Fixed an issue where interactors and interactables could use a different default XR Interaction Manager reference, such as after instantiating a prefab that contains an XR Interaction Manager into a scene with interactables that previously created a default manager instance. ([XRIT-65](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-65))\n- Fixed teleportation not working when the prefab containing the Teleportation Provider component is instantiated after the teleportation interactables are loaded by attempting to find that component upon each teleport request if needed instead of only upon `Awake`.\n- Fixed climb not working when the prefab containing the Climb Provider component is instantiated after the climb interactables are loaded by attempting to find that component upon each climb attempt if needed instead of only upon `Awake`.\n- Fixed `XR General Grab Transformer` scaling doing exponential scaling because it was using squared distance for ration calculation.\n- Fixed AR Gesture Interactor Inspector window not showing Raycast Mask and Raycast Trigger Interaction properties when the version of AR Foundation is older than version 5.0.\n- Fixed compiler warnings related to `ARSessionOrigin` when AR Foundation 5.0 or newer is installed."
      },
      "upmCi": {
        "footprint": "1ec454c851e1694a836732962dadcb19a1ad4f58"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@2.4/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "1900cc445a8dfc3f84a27a40a77bd8e68ed83d22"
      },
      "dist": {
        "shasum": "92574d10e680fb5889fa21bcb7bc4c2e23b5960d",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.4.0.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.4.0",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "assets",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.5.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.2.1",
        "com.unity.xr.legacyinputhelpers": "2.1.10",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.4.0-pre.2": {
      "unity": "2021.3",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        },
        {
          "displayName": "Tunneling Vignette",
          "description": "Assets to let users set up and configure tunneling vignette effects as a comfort mode option.",
          "path": "Samples~/Tunneling Vignette"
        },
        {
          "displayName": "Meta Gaze Adapter",
          "description": "This sample provides an example to get eye tracking working with the Meta Quest Pro and the XRI Gaze Interactor.",
          "path": "Samples~/Meta Gaze Adapter"
        },
        {
          "displayName": "Hands Interaction Demo",
          "description": "Sample scene and other assets for hand-tracking integration with the XR Interaction Toolkit.",
          "path": "Samples~/Hands Interaction Demo"
        }
      ],
      "_upm": {
        "changelog": "### Changed\n- Changed the `XR Interactable Affordance State Provider` order to put focus state after all other interaction states for consistency.\n- Changed the required version of `com.unity.xr.hands` for the Hands Interaction Demo sample from 1.2.0 to 1.2.1.\n\n### Fixed\n- Fixed a null reference issue when accessing device and screen-space controllers caused by optimization changes made in the XR Ray Interactor.\n- Fixed unwanted behavior for the Hand Interactions Demo > Hand Menu sample prefabs, specifically in the `ToggleGameObject` sample script.\n- Fixed an issue with XR Interaction Manager where focused interactables would not be cleared in the correct order when selecting a new interactable."
      },
      "upmCi": {
        "footprint": "4ae50aed427b157fba255447aab1fd99a2ce7f1a"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@2.4/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "e91152442a93e8e69ed43d8fb344446480ff75ac"
      },
      "dist": {
        "shasum": "c7a11647232946541fed4bc627bc497ebeb3eeec",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.4.0-pre.2.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.4.0-pre.2",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.5.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.2.1",
        "com.unity.xr.legacyinputhelpers": "2.1.10",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.4.0-pre.1": {
      "unity": "2021.3",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        },
        {
          "displayName": "Tunneling Vignette",
          "description": "Assets to let users set up and configure tunneling vignette effects as a comfort mode option.",
          "path": "Samples~/Tunneling Vignette"
        },
        {
          "displayName": "Meta Gaze Adapter",
          "description": "This sample provides an example to get eye tracking working with the Meta Quest Pro and the XRI Gaze Interactor.",
          "path": "Samples~/Meta Gaze Adapter"
        },
        {
          "displayName": "Hands Interaction Demo",
          "description": "Sample scene and other assets for hand-tracking integration with the XR Interaction Toolkit.",
          "path": "Samples~/Hands Interaction Demo"
        }
      ],
      "_upm": {
        "changelog": "### Added\n- Added hands support to XR Device Simulator. You must have the [XR Hands package](https://docs.unity3d.com/Manual/com.unity.xr.hands.html) installed in your project to use this new functionality.\n- Added Is Tracked action to XR Controller (Action-based), and updated presets and prefabs in Starter Assets sample to make use of the new Is Tracked input actions in the `XRI Default Input Actions`.\n- Added properties in the [`ARGestureInteractor`](xref:UnityEngine.XR.Interaction.Toolkit.AR.ARGestureInteractor) class to control raycast behavior for gestures.\n- Added the `IXRPokeFilter` interface to allow other classes to act as customized poke filters for the `XRPokeInteractor` instead of only supporting the `XRPokeFilter` component.\n- Added XR Interactor Affordance State Provider component which can drive affordance receivers using interactor interactions events.\n- Added Color Gradient Line Renderer Affordance Receiver to pair with an XR Interactor Affordance State Provider on a Ray interactor to improve visual coloring. Has a property to automatically disable coloring of XR Interactor Line Visual.\n- Added [Hand Menu](../manual/hand-menu.md) component, as well as a sample prefab of a working hand menu in the Hands Interaction Demo sample.\n  - `HandMenu` component has a split configuration for hands and controllers, with a new `FollowPresetDatum`. \n  - Added gaze activation settings and a reveal/ hide hand menu animation.\n- Added [XR Input Modality Manager](../manual/xr-input-modality-manager.md) component which manages swapping between hand and controller hierarchies in the XR Origin. Updated prefabs in the package samples to make use of this component.\n- Added ability for XR Interactor Line Visual to curve accurately and track interactable attach points during selection.\n- Added Auto Adjust Line Length property to XR Interactor Line Visual to retract the line end after a delay when the ray interactor doesn't hit any valid targets.\n- Added the [XR Gaze Assistance](../manual/xr-gaze-assistance.md) component to enable split interaction. Eye for aiming and controllers for selection.\n- Added the [`IXRRayProvider`](xref:UnityEngine.XR.Interaction.Toolkit.IXRRayProvider) interface to allow other ray implementations to take advantage of split interaction.\n- Added `Focus State` to interactables. An interactable that is selected is also focused; it remains focused until another interactable is focused instead. Useful for highlighting an object to later perform operations on.\n- Added Visit Each Frame property to XR Controller Recorder to control whether each frame of the input recording must be played back regardless of the time period passed.\n- Added [XR Transform Stabilizer](../manual/xr-transform-stabilizer.md) component that applies optimized stabilization techniques to remove pose jitter and makes aiming and selecting with rays easier for users. \n- Added Climb Provider, which provides locomotion counter to interactor movement while the user is selecting a Climb Interactable.\n  - Added menu item **Assets > Create > XR > Locomotion > Climb Settings**, which creates a Climb Settings Datum asset.\n  - Added a Climb Provider instance to `XR Origin Preconfigured` in the Starter Assets sample.\n  - Added `Climb Sample` prefab to the Starter Assets sample, and added an instance of this prefab to `DemoScene`. This prefab includes preconfigured Climb Interactables.\n- Added support for XRRayInteractors to scroll UI panels using the thumbstick.\n  - IUInteractors now support UIHoverEnter and UIHoverExit events.\n  - UIInputModule gains the trackedScrollDeltaMultiplier property to control scrolling speeds via thumbstick.\n  - TrackedDeviceModel gains properties for current UI Selectable and if the selected UI is scrollable.\n  - ActionBasedController gains a property for UI scrolling input, set to the thumbstick in the starter assets.\n- Added configuration of interaction overrides to XR Interaction Group, allowing certain Group members to take control of interaction when attempting to select, regardless of priority.\n- Added Direct Interactor as an interaction override for Poke Interactor in each XR Interaction Group in `XR Origin (XR Rig)` in Starter Assets sample.\n- Added new Shader Graphs and Materials in `Hand Interaction Demo` for a transparent hand that supports highlighting fingers\n- Added the [`TouchscreenGestureInputController`](xref:UnityEngine.XR.Interaction.Toolkit.AR.Inputs.TouchscreenGestureInputController) which allows users to surface touchscreen gesture data via the Input System.\n- Added the [`XRScreenSpaceController`](xref:UnityEngine.XR.Interaction.Toolkit.XRScreenSpaceController) which enables usage of screenspace input, from touchscreen or mouse, with interactors.\n- Added the `enableARRaycasting` property to [`XRRayInteractor`](xref:UnityEngine.XR.Interaction.Toolkit.XRRayInteractor) which enables raycasting against the AR environment if AR Foundation is installed.\n\n### Changed\n- Changed [`XRControllerState`](xref:UnityEngine.XR.Interaction.Toolkit.XRControllerState) by adding an `isTracked` field. Deprecated old constructors, users should update their code to call the ones with the added parameter.\n- Changed XRI project validation to only log errors to the console, not warnings.\n- Changed XR Interactor Line Visual so it bends to the selected interactable by default. Set **Line Bend Ratio** to **1** to revert to the old behavior where the line would remain straight.\n- Changed XR Interactor Line Visual default value of Line Width from 0.02 to 0.005.\n- Improved performance of the line visual and ray interactor by optimizing most of the line computation math for the Burst compiler. The [Burst package](https://docs.unity3d.com/Manual/com.unity.burst.html) must be installed in your project to take advantage of the optimizations.\n- Changed `XRInteractorLineVisual` by adding the `OnDestroy` and `LateUpdate` methods. Users who had already implemented either method in derived classes will need to call the base method.\n- Changed `XRInteractorReticleVisual` by adding the `OnDisable` method so it disables the reticle when the component is disabled. Users who had already implemented that method in derived classes will need to call the base method.\n- Changed `TeleportationAnchor.GetAttachTransform` method to return the `teleportAnchorTransform` value.\n- Renamed Starter Assets sample prefabs:\n  - Renamed `Complete XR Origin Set Up` prefab to `XR Interaction Setup`.\n  - Renamed `XR Origin` prefab to `XR Origin (XR Rig)`.\n  - Renamed `Complete Teleport Area Set Up` prefab to `Teleportation Environment`.\n- Renamed Hands Interaction Demo sample prefabs:\n  - Renamed `Complete XR Origin Hands Set Up` prefab to `XR Interaction Hands Setup`.\n  - Renamed `XR Origin Hands` prefab to `XR Origin Hands (XR Rig)`.\n- Changed `XR Origin (XR Rig)` to reorganize locomotion components to new GameObjects.\n- Changed `XR Origin (XR Rig)` to disable grab move locomotion by default. Activate the **Grab Move** GameObject to re-enable that functionality.\n- Changed `XR Origin Hands (XR Rig)` to be a prefab variant of the `XR Origin (XR Rig)` prefab.\n- Changed Starter Assets sample prefabs by adding XR Gaze Fallback to the XR Origin GameObject.\n- Changed `XRRayInteractor`, `XRInteractorLineVisual`, and `XRInteractorReticleVisual` to support mediation through split interaction.\n- Changed XR Ray Interactor to no longer interact with UGUI Canvases while selecting an interactable.\n- Changed XR Ray Interactor so the Hover To Select property will now activate with UI elements.\n- Changed `com.unity.inputsystem` dependency from 1.4.4 to 1.5.0.\n- Changed `com.unity.xr.core-utils` dependency from 2.2.0 to 2.2.1.\n- Changed lowest supported Unity Editor version of XR Interaction Toolkit to 2021.3 now that 2020.3 has reached End of Life.\n- Changed `XRPokeLogic` to resolve an issue where starting a poke from behind the object can trigger select.\n- Updated the Hands Interaction Demo with new interaction reactive visuals:\n  - Changed the required version of `com.unity.xr.hands` for the Hands Interaction Demo sample from 1.1.0 to 1.2.0.\n  - Changed the `XR Origin Hands (XR Rig)` prefab to use prefabs for each hand visual with affordances to highlight the fingers during interaction.\n  - Changed the hands model to use new components in `com.unity.xr.hands` to subscribe and expose hand tracking events: `XRHandsSkeletonDriver`, `XRHandTrackingEvents`, and `XRHandMeshController`.\n- Added Sphere Collider optimized accuracy improvement for Direct Interactor that improves inter-frame reliability and latency.\n\n### Removed\n- Removed `HandsAndControllersManager` script from the Hands Interaction Demo sample and moved it into the package as [`XRInputModalityManager`](xref:UnityEngine.XR.Interaction.Toolkit.Inputs.XRInputModalityManager).\n\n### Fixed\n- Fixed XR Grab Interactables interfering with player movement by using `Physics.IgnoreCollision` to prevent collision between the Character Controller and the grabbed object's colliders.\n- Fixed the Input Devices tab in the [XR Interaction Debugger window](../manual/debugger-window.md) so it doesn't rebuild the tree every Editor frame. This allows the input devices to be collapsed. Added additional columns.\n- Fixed the teleport ray interactor getting stuck on after a teleport completes when the GameObject with the Action Based Controller Manager component was deactivated.\n- Fixed XR Interactor Line Visual not working with Teleportation Anchor when an XR Interactable Snap Volume is used by no longer skipping the snapping behavior when the ray interactor has a selection. Use the Disable Snap Collider When Selected property of XR Interactable Snap Volume to control that behavior.\n- Fixed bugs in Lazy Follow where threshold mechanics weren't being respected, and reworked class to leverage [`SmartFollowVector3TweenableVariable`](xref:UnityEngine.XR.Interaction.Toolkit.Utilities.Tweenables.SmartTweenableVariables.SmartFollowVector3TweenableVariable) and [`SmartFollowQuaternionTweenableVariable`](xref:UnityEngine.XR.Interaction.Toolkit.Utilities.Tweenables.SmartTweenableVariables.SmartFollowQuaternionTweenableVariable).\n- Fixed bug with PokeFollowAffordance sample script that did not work when using two hands on the same canvas.\n- Fixed so poke objects will push to the larger depth when both hands are poking at the same time.\n- Fixed an issue in the `ActionBasedControllerManager` that would cause a null-reference exception if the Direct or Ray interactors were not assigned. ([XRIT-72](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-72))\n- Fixed an issue with the state-change of the `XRInteractableAffordanceStateProvider` that would trigger Select and Hover effects when currently Activated and `ignoreActivateEvents` was set to true or Hover effects when actively Selected and `ignoreSelectEvents` was set to true.\n- Fixed an Array Out of Bounds error when using Affordance Themes when accessing the last element in the list of states.\n- Fixed an issue with `XRPokeLogic` where starting a poke from behind the object can trigger select."
      },
      "upmCi": {
        "footprint": "abc072a30543b813612c5e87e2f6503957c3358b"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@2.4/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "f9b729a0cf9fa4fdaee2a755e1ddb0505ff8dc14"
      },
      "dist": {
        "shasum": "81afbb40d1d1a43e64e6b5f5df5de5bc52592487",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.4.0-pre.1.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.4.0-pre.1",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.5.0",
        "com.unity.mathematics": "1.2.6",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.2.1",
        "com.unity.xr.legacyinputhelpers": "2.1.10",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.3.2": {
      "unity": "2020.3",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        },
        {
          "displayName": "Tunneling Vignette",
          "description": "Assets to let users set up and configure tunneling vignette effects as a comfort mode option.",
          "path": "Samples~/Tunneling Vignette"
        },
        {
          "displayName": "Meta Gaze Adapter",
          "description": "This sample provides an example to get eye tracking working with the Meta Quest Pro and the XRI Gaze Interactor.",
          "path": "Samples~/Meta Gaze Adapter"
        },
        {
          "displayName": "Hands Interaction Demo",
          "description": "Sample scene and other assets for hand-tracking integration with the XR Interaction Toolkit.",
          "path": "Samples~/Hands Interaction Demo"
        }
      ],
      "_upm": {
        "changelog": "### Changed\n- Changed XRI project validation to only log errors to the console, not warnings.\n- Updated `XRPokeFollowAffordance` smoothing property default from 8 to 16 to make it feel more responsive.\n\n### Fixed\n- Added additional checks against AR Foundation 5.0 and newer so deprecation messages and the use of the newer XR Origin (AR) is hidden when using AR Foundation 4.2 and older.\n- Fixed GC allocations produced each frame by `XRPokeInteractor.UpdateUIModel`.\n- Fixed frame-timing for Locomotion Input Tests when running in batch mode.\n- `XRInteractableAffordanceStateProvider` Fixes:\n    - Activated state was lower priority than selected, which because select is not exited, this was causing issues with it not appearing.\n    - There were some racing coroutines between select and activate, and now trigger a new animation blocks previous animations\n    - Leaving the select state cancels select animations that might not have completed\n    - Leaving activated state cancels activate animations that might not have completed\n- Fixed repeat audio issue in the `AudioAffordanceReceiver` by adding extra conditions which treat select as a modifier to hover, and activated as a modifier to select. Doing this prevents triggering repeat audio clips that shouldn't fire, like releasing the activate trigger, or releasing the select trigger while still hovering.\n- Fixed `XRPokeLogic` issue where poking from behind objects would sometimes trigger select incorrectly.\n- Fixed `XRPokeLogic` issue where depth percent was incorrectly calculated using an exponential value which would result in poke buttons feeling disconnected from the poke interactor position."
      },
      "upmCi": {
        "footprint": "ac2929bff59a5e644816579701b9dffd6790f269"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@2.3/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "2c93af311e945e9ab09b4b5301692ecb540c51f7"
      },
      "dist": {
        "shasum": "00796e6b02a397710b56758fd544557d6c5f6774",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.3.2.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.3.2",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.4.4",
        "com.unity.mathematics": "1.2.6",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.legacyinputhelpers": "2.1.10",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.3.1": {
      "unity": "2020.3",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        },
        {
          "displayName": "Tunneling Vignette",
          "description": "Assets to let users set up and configure tunneling vignette effects as a comfort mode option.",
          "path": "Samples~/Tunneling Vignette"
        },
        {
          "displayName": "Meta Gaze Adapter",
          "description": "This sample provides an example to get eye tracking working with the Meta Quest Pro and the XRI Gaze Interactor.",
          "path": "Samples~/Meta Gaze Adapter"
        },
        {
          "displayName": "Hands Interaction Demo",
          "description": "Sample scene and other assets for hand-tracking integration with the XR Interaction Toolkit.",
          "path": "Samples~/Hands Interaction Demo"
        }
      ],
      "_upm": {
        "changelog": "### Added\n- Added System Gesture Detector component to the Hands Interaction Demo sample to add system gesture and menu palm pinch gesture events. Added sound upon menu press as an example. Added Aim Flags input actions to the `XRI Default Input Actions` in the Starter Assets sample to support this.\n- Added [Interaction filters](../manual/interaction-filters.md) documentation for `IXRHoverFilter`, `IXRSelectFilter`, `IXRInteractionStrengthFilter`, and the corresponding filter delegates with examples.\n\n### Changed\n- Changed the Poke Gesture Detector component in the Hands Interaction Demo sample to no longer end the poke gesture when hand tracking is lost. This fixes the Ray Interactor line visual reappearing when hand tracking is lost while doing the poke gesture.\n- Changed `XRInteractorReticleVisual` to ensure consistent attempts to align the reticle prefab's `z` axis with the `transform.up` of the XROrigin when `AlignPrefabWithSurfaceNormal` is `true` and aligning with a non-horizontal surface.\n- Changed `XRInteractorReticleVisual` to align the reticle prefab's `z` axis with the forward direction of the reticle's interactor when `AlignPrefabWithSurfaceNormal` is `true` and aligning with a horizontal surface.\n- Updated installation documentation with convenience links for installing the XRI package on older versions of Unity 2021 where the package was not included in the main Editor manifest.\n- Changed so UGUI poke interactions are now considered to be blocking interactions for interaction groups. This allows rays to be properly hidden when hovering or selecting a UGUI canvas with poke.\n- Changed to use velocity estimation of poke interactor to add an extra validation mechanism in the XR Poke Filter hover validation check to allow poke selection to occur in cases where it was previously rejected, while still preventing poking from behind and other non-desireable cases.\n- Changed to cache poke selection validation check so that it's easier to hold a poke when the selection conditions are met. This makes scrolling UGUI canvases easier and makes poke interactions feel more consistent.\n- Changed AR Scale Interactable so changing the Min Scale and/or Max Scale during runtime will keep the current object scale if still within range instead of resizing the object to keep the same scale ratio.\n\n### Fixed\n- Fixed the Hands Interaction Demo sample to wait to activate the controller GameObjects until they are reconnected instead of each time hand tracking is lost. Also fixed the controllers appearing at the origin if they have never been tracked.\n- Fixed the Hands Interaction Demo sample so it disables the hand interactors while doing a system gesture (such as a user looking at their open palm at eye level).\n- Fixed warning about a self-intersecting polygon in the `Frame.fbx` model in the Hands Interaction Demo sample.\n- Fixed warning in Hands Interaction Demo sample about obsolete API usage coming from the hands subsystem. \n- Fixed `XRSimulatedController` and `XRSimulatedHMD` to have identifying characteristics information in the `capabilities` field of their corresponding `InputDeviceDescription`. ([XRIT-50](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-50))\n- Fixed an issue in the `XRController` class where the `inputDevice` property was not reinitialized when the `controllerNode` property was changed. ([XRIT-52](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-52))\n- UGUI ray interactions are now correctly blocked when interaction groups block ray interactions and the ray is hidden.\n- Fixed an issue with `TrackedDeviceGraphicRaycaster`, when using the `XRPokeInteractor` on UGUI canvases with different sort orders, where interaction was blocked on all but the highest Order in Layer valued canvas. ([XRIT-48](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-48))\n- Fixed an issue with `TrackedDeviceGraphicsRaycaster`, where opening a dropdown would block all other UGUI canvases to become non-interactable with an `XRPokeInteractor` until the dropdown was closed.\n- Fixed the `Starter Assets` and `Hands Interaction Demo` prefabs which contained components and shaders with a mix of both Built-in Render Pipeline and Universal Render Pipeline. They are all now using Built-in Render Pipeline for consistency.\n- Fixed `XRInteractorReticleVisual` incorrect rotation around `y` axis when aligning prefab to surface normal. ([XRIT-18](https://issuetracker.unity3d.com/product/unity/issues/guid/XRIT-18))\n- Fixed `XRInteractorReticleVisual` incorrect rotation when `AlignPrefabWithSurfaceNormal` is `false`.\n- Fixed `XRInteractorReticleVisual` inconsistent rotation when `AlignPrefabWithSurfaceNormal` and `DrawOnNoHit` are `true` but there is no active hit.\n- Fixed `UIInputModule` issue where tracked devices cannot drag on UI elements when `Cursor.lockState` is set to `Locked`."
      },
      "upmCi": {
        "footprint": "ba11daac3f0362731cf079a49bac504096a6e476"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@2.3/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "44cc41ef32decd978f510e3d125bf4620752d094"
      },
      "dist": {
        "shasum": "efba03beb3692916aafde5b2a2c856cf5f70e7d8",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.3.1.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.3.1",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.4.4",
        "com.unity.mathematics": "1.2.6",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.legacyinputhelpers": "2.1.10",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.3.0": {
      "unity": "2020.3",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        },
        {
          "displayName": "Tunneling Vignette",
          "description": "Assets to let users set up and configure tunneling vignette effects as a comfort mode option.",
          "path": "Samples~/Tunneling Vignette"
        },
        {
          "displayName": "Meta Gaze Adapter",
          "description": "This sample provides an example to get eye tracking working with the Meta Quest Pro and the XRI Gaze Interactor.",
          "path": "Samples~/Meta Gaze Adapter"
        },
        {
          "displayName": "Hands Interaction Demo",
          "description": "Sample scene and other assets for hand-tracking integration with the XR Interaction Toolkit.",
          "path": "Samples~/Hands Interaction Demo"
        }
      ],
      "_upm": {
        "changelog": "### Added\n- Added a Raycast Snap Volume Interaction property to control whether the XR Ray Interactor will collide with or ignore trigger snap colliders from an XR Interactable Snap Volume (used by gaze assistance). This allows a user to set Raycast Trigger Interaction to Ignore but still collide with trigger colliders that are associated with a snap volume.\n- Added options to XR Poke Follow Affordance in the Starter Assets sample to apply the follow animation if the poke target is a child and to clamp the follow target to a maximum distance from the poke target.\n- Added an XR Poke Follow Affordance to the `TextButton` prefab in the Starter Assets sample so that the button graphics can move in response to poke.\n- Added Tracking State and Is Tracked input actions to the `XRI Default Input Actions` in the Starter Assets sample.\n- Added [Meta Gaze Adapter](../manual/samples.md#meta-gaze-adapter) sample to allow developers to request permission and initialize eye tracking for the Meta Quest Pro.\n- Added [Hands Interaction Demo](../manual/samples.md#hands-interaction-demo) sample to demonstrate interactions with hand tracking.\n- Added poke interaction examples to the `DemoScene` in the Starter Assets sample.\n- Added ability to customize the layer mask and trigger interaction when the XR Poke Interactor performs the physics sphere overlap call.\n- Added documentation regarding behavior when Select Action Trigger is set to State on XR Direct Interactor and XR Ray Interactor.\n\n### Changed\n- Changed the Stop Manipulation action (default binding `Escape`) in the XR Device Simulator to always stop manipulation every time it is pressed instead of cycling between None and FPS mode. Trigger the Cycle Devices action (default binding `Tab`) to switch back to FPS mode instead.\n- Changed `Ray Interactor` prefab in the Starter Assets sample to enable Treat Selection As Valid State on the XR Interactor Line Visual.\n- Changed the  **GameObject** &gt; **XR** &gt; **Grab Interactable** menu item to set the Rigidbody Interpolate property on the created GameObject to Interpolate.\n- Changed the Rigidbody Interpolate property from None to Interpolate in each of the Starter Assets sample grab interactable prefabs.\n- Changed the default value of the Color Property Name property on the Color Material Property Affordance Receiver component to an empty string instead of `\"_BaseColor\"`. An empty string will now use either `\"_BaseColor\"` or `\"_Color\"` depending on the current render pipeline to add support for the Built-In Render Pipeline.\n- Changed `GetValidTargets` on each interactor type to return an empty list when the interactor is disabled.\n- Changed `ActionBasedControllerManager` in Starter Assets sample to make use of XR Interaction Group and removed some unused serialized fields.\n- Changed `XR Origin Preconfigured` in Starter Assets sample so it instantiates the controller model prefab at runtime instead of being in the prefab hierarchy to make it easier for users to override the model used.\n- Changed `Teleport Interactor` in Starter Assets sample so it instantiates the reticle prefabs at runtime instead of being in the prefab hierarchy to make it easier for users to override the reticle used.\n- Changed `com.unity.xr.core-utils` dependency to 2.2.0.\n\n### Fixed\n- Fixed Teleportation Anchor incorrectly triggering a teleport when the Ray Interactor stops pointing at the anchor when it no longer has any ray cast hits.\n- Fixed Starter Assets sample prefabs and `DemoScene` to have the Gaze Interactor prefab.\n- Fixed `XRPokeInteractor` so it uses the `targetFilter` for filtering the valid targets returned by `GetValidTargets`.\n- Fixed the Fix button for project validation issue \"Interaction Layer 31 is not set to 'Teleport'\" not persisting to the settings asset when closing the Unity Editor.\n- Fixed missing references in device simulator UI button images by assigning to null.\n- Fixed the `PokeStateData` that is generated from UI poke interaction so that its `axisAlignedPokeInteractionPoint` is relative to the world position of the target transform.\n- Fixed broken click animations in `XRInteractableAffordanceStateProvider`.\n- Fixed XR Device Simulator so it will use the new main camera if the previous one is disabled or destroyed.\n- Fixed issue where AR gestures did not take into account UI in `ARBaseGestureInteractable` behaviors (such as AR Placement Interactable) by adding an `excludeUITouches` property, which is enabled by default.\n- Fixed potential invalid stayed colliders list in `XRDirectInteractor` and `XRSocketInteractor` when the interactor is disabled while in contact with a collider.\n- Fixed hover and select events being incorrectly fired when an `XRDirectInteractor` or `XRSocketInteractor` GameObject or component is disabled while in contact with an interactable, moved away from the interactable, and then enabled.\n- Fixed XR Poke Interactor to query the local [PhysicsScene](https://docs.unity3d.com/ScriptReference/PhysicsScene.html) instead of using static physics calls.\n- Fixed poke in UI scrolling in a scroll view outside of the viewport by ensuring the Tracked Device Graphic Raycaster respects the alpha hit test threshold.\n- Fixed the `Teleport Anchor` prefab in Starter Assets to place the teleport destination at the top of the platform, fixing a bump that would occur when moving with locomotion after teleporting."
      },
      "upmCi": {
        "footprint": "c793299a54c5f71a9f8fa40827cc83cfb22a7037"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@2.3/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "a2490553b104eafd4c1371fe490ebebc66434627"
      },
      "dist": {
        "shasum": "4b2eb6e7095383e729c7c95e02ee331076347285",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.3.0.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.3.0",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.4.4",
        "com.unity.mathematics": "1.2.6",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0",
        "com.unity.xr.legacyinputhelpers": "2.1.10",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.3.0-pre.1": {
      "unity": "2020.3",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        },
        {
          "displayName": "Tunneling Vignette",
          "description": "Assets to let users set up and configure tunneling vignette effects as a comfort mode option.",
          "path": "Samples~/Tunneling Vignette"
        }
      ],
      "upmCi": {
        "footprint": "7fbe1505235bed1cf7007f1a7fd3ab8f160a498f"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.interaction.toolkit@2.3/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "94e87a568f8ce9aeebe5091e5d53d42c4deea64f"
      },
      "dist": {
        "shasum": "e17e449c3fd52298e5c1b890827543f376395f92",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.3.0-pre.1.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.3.0-pre.1",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.4.4",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.2.0-pre.2",
        "com.unity.xr.legacyinputhelpers": "2.1.10",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0",
        "com.unity.mathematics": "1.2.6"
      }
    },
    "2.0.4": {
      "unity": "2019.4",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "c1aa8571858c77eb2bb60ef41d5f4df59824df45"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "d06fdbfd8b27d0ed11b14914fe49ce91d89dc5ec"
      },
      "dist": {
        "shasum": "95ae1e978ca0e63656387267aaa661677aa52de3",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.0.4.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.0.4",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.2.0": {
      "unity": "2020.3",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        },
        {
          "displayName": "Tunneling Vignette",
          "description": "Assets to let users set up and configure tunneling vignette effects as a comfort mode option.",
          "path": "Samples~/Tunneling Vignette"
        }
      ],
      "upmCi": {
        "footprint": "0475f71d615b95be5ae383b123b28c0843462c2b"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "bb21b025f22df3ff22db8542eeee45c154640b88"
      },
      "dist": {
        "shasum": "50768d1639fab2e5eb4cbd2cd415586f257e9060",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.2.0.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.2.0",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.0.3": {
      "unity": "2019.4",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "9c2902a499d3334ef78badc8b2206c314d3f92ca"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "6e9903d65de96f51b380acde84629283eab620db"
      },
      "dist": {
        "shasum": "57edfcd880bd80b4671714daf06c1081ca2baeb6",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.0.3.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.0.3",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.2.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.1.1": {
      "unity": "2019.4",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        },
        {
          "displayName": "Tunneling Vignette",
          "description": "Assets to let users set up and configure tunneling vignette effects as a comfort mode option.",
          "path": "Samples~/Tunneling Vignette"
        }
      ],
      "upmCi": {
        "footprint": "c9619fb39a9010dda985c5fb206f43116dca9238"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "b72ad6beca34bf12828097cb8f003a5168375678"
      },
      "dist": {
        "shasum": "20bcb4e3b8126475c2358cca1ededfc02b8c945d",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.1.1.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.1.1",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.1.0-pre.1": {
      "unity": "2019.4",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        },
        {
          "displayName": "Tunneling Vignette",
          "description": "Assets to let users set up and configure tunneling vignette effects as a comfort mode option.",
          "path": "Samples~/Tunneling Vignette"
        }
      ],
      "_upm": {
        "changelog": "### Added\r\n- Added properties to XR Grab Interactable to use dynamic attach transforms so the grab pose will be based on the pose of the Interactor when the selection is made. You can enable the Use Dynamic Attach property to keep the object in the same position and rotation when grabbed. ([1373337](https://issuetracker.unity3d.com/product/unity/issues/guid/1373337))\r\n- Added filtering for interactions to help determine the intent of the user. The new abstractions XR Target Filter and XR Target Evaluator let users configure and extend the logic of how an Interactor ranks an Interactable from a list of valid ones, specifically in the `GetValidTargets` method. Several different evaluators are included in this update, and custom ones can be created. This makes it easier to customize the Interactor without needing to create a derived behavior.\r\n- Added the `XRBaseInteractable.distanceCalculationMode` property. This give users the ability to configure how an Interactable calculates its distance to a location, such as to an Interactor for sorting its valid targets, at varying tradeoffs between accuracy and performance.\r\n- Added the `XRBaseInteractable.getDistanceOverride` property that lets users assign a method to be called when the Interactable is performing a distance calculation to a location, which is used when the Interactor is ordering its valid targets. This property makes it easier to customize the Interactable without needing to create a derived behavior.\r\n- Added `IsOverUIGameObject` function to `XRRayInteractor` that does a simple check to see if the ray cast result is hitting a UI GameObject.\r\n- Added `InputActionReference` properties to the `XRUIInputModule` for left/right/middle clicks, navigation move, submit, cancel, scroll and pointer movement actions. This allows for greater flexibility and customization of what devices can drive UI input when using the `XRUIInputModule`.\r\n- The `XRI Default Input Actions` asset in the `Starter Assets` sample package now includes an `XRI UI` Action Map for UI-specific Input Actions. Also included is a Preset asset to quickly map the actions onto the `XRUIInputModule` component.\r\n- Added a Tunneling Vignette sample. It contains assets to let users set up and configure the tunneling vignette as a comfort mode intended to mitigate motion sickness in VR.\r\n- Added a Tunneling Vignette Controller component used for driving the vignette material included with the Tunneling Vignette sample. Locomotion Provider components can be drag-and-dropped into a list of Locomotion Providers that will trigger the tunneling vignette effect. A custom inspector allows previewing each effect for the corresponding Locomotion Provider.\r\n  * Added `ITunnelingVignetteProvider` interface to allow custom behaviors to control the vignette effect.\r\n  * Added a `LocomotionPhase` enum in `LocomotionProvider` that can be used to describe different phases of a locomotion for use with the tunneling vignette. Added code in `ContinuousMoveProviderBase`, `ContinuousTurnProviderBase`, `SnapTurnProviderBase`, and `TeleportationProvider` to compute their `LocomotionPhase`.\r\n  * Added a Delay Time property to the Teleportation Provider and Snap Turn Provider components to support customization of timing for use with fading in the tunneling vignette.\r\n\r\n### Changed\r\n- Updated code paths with macro protections around `InputSystem` or `Input Manager` based code to prevent attempted usage when either one is not active.\r\n- Scroll speed when using the ScrollWheel Input System Action is now being divided by 20 pixels per line instead of 120 pixels per line to match the `InputSystemUIInputModule` scrolling speed.\r\n- Changed `XRSocketInteractor` hover mesh pose calculation to only ignore the current pose of the attach transform for `XRGrabInteractable` when Use Dynamic Attach is disabled instead of for all types of `IXRSelectInteractable`.\r\n- Changed `XRControllerRecorder.recording` from `internal` to `public`.\r\n\r\n### Fixed\r\n- Fixed `UIInputModule` so pointer clicks set the correct button (left/right/middle) for the `EventSystem` in the `PointerEventData`.\r\n- Fixed compilation errors on platforms such as Game Core where `ENABLE_VR` is not currently defined."
      },
      "upmCi": {
        "footprint": "3f6c44352a5734705c0526140d753c59b4d6c109"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "7832ad06a69eefa88578bb8b208b0277bd875d33"
      },
      "_id": "com.unity.xr.interaction.toolkit@2.1.0-pre.1",
      "_integrity": "sha512-H4FAOfZU+ST0Tc50prTAGp0iGFT/Uk7XUPd30qRAB6IdiLRdyL/M+VLyLD2f5wFaY4D2jB5evS41OUL855RTxA==",
      "_resolved": "/tmp/com.unity.xr.interaction.toolkit@2.1.0-pre.1-0okc_rbg.tgz",
      "_from": "file:/tmp/com.unity.xr.interaction.toolkit@2.1.0-pre.1-0okc_rbg.tgz",
      "dist": {
        "shasum": "c42336ce11343ecb51706515990abcafe07e4aa4",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.1.0-pre.1.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.1.0-pre.1",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.3.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.0.2": {
      "unity": "2019.4",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "_upm": {
        "changelog": "### Fixed\r\n- Fixed wrong offset when selecting an `XRGrabInteractable` with Track Rotation disabled when the Attach Transform had a different rotation than the Interactable's rotation. This configuration was not covered in the related fix made previously in version [2.0.0-pre.6](#200-pre6---2021-12-15). ([1361271](https://issuetracker.unity3d.com/product/unity/issues/guid/1361271))\r\n- Fixed XR Socket Interactor hover mesh position and rotation for an XR Grab Interactable with Track Position and/or Track Rotation disabled.\r\n- Fixed the simulated controllers not working in projects where the Scripting Backend was set to IL2CPP.\r\n- Fixed the simulated HMD `deviceRotation` not being set. It now matches the `centerEyeRotation`.\r\n- Fixed the **GameObject &gt; XR &gt; AR Annotation Interactable** menu item when AR Foundation is installed to add the correct component.\r\n- Fixed **UIInputModule** so it uses and resets [`PointerEventData.useDragThreshold`](https://docs.unity3d.com/Packages/com.unity.ugui@1.0/api/UnityEngine.EventSystems.PointerEventData.html#UnityEngine_EventSystems_PointerEventData_useDragThreshold) to allow users to ignore the drag threshold by implementing [`IInitializePotentialDragHandler`](https://docs.unity3d.com/Packages/com.unity.ugui@1.0/api/UnityEngine.EventSystems.IInitializePotentialDragHandler.html). It was previously being ignored and causing sliders and scrollbars to incorrectly use a drag threshold."
      },
      "upmCi": {
        "footprint": "95b58fa3412a2476786e4a322e1e27a14f018db1"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "de6c9c113846c3ca4449d0285a4683bb9c87855e"
      },
      "_id": "com.unity.xr.interaction.toolkit@2.0.2",
      "_integrity": "sha512-NXxP7ccBhWhuk86k7zb9VFwOf8RwcjBZJhFGZrURuE0JTrf9erSScbRZy4vUWuvmLUQYUfMZeJFTWXaYzX2WbQ==",
      "_resolved": "/tmp/com.unity.xr.interaction.toolkit@2.0.2-gwkb52xp.tgz",
      "_from": "file:/tmp/com.unity.xr.interaction.toolkit@2.0.2-gwkb52xp.tgz",
      "dist": {
        "shasum": "82e54816a780746792ef9ccb6bd5e797ac765e14",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.0.2.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.0.2",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.2.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.0.1": {
      "unity": "2019.4",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upm": {
        "changelog": "### Changed,- Changed the `XRI Default Input Actions` asset in the Starter Assets sample by removing the `primaryButton` bindings from Teleport Select and Teleport Mode Activate. If you want to restore the old behavior of both bindings, add an Up\\Down\\Left\\Right Composite, reassign the Up composite part binding, and add the Sector interaction for that direction. The actions were also reorganized into additional Action Maps.,### Fixed,- Fixed regression introduced with version [2.0.0](#200---2022-02-16) so the hover mesh draws in the correct location when the Interactable's Attach Transform is not a child Transform or deep child Transform.,- Fixed the `XRI Default Input Actions` asset in the Starter Assets sample showing the warning \"(Incompatible Value Type)\" on the bindings for Teleport Select and Teleport Mode Activate by changing the action type from Button to Value with an expected control type of `Vector2`. The sample needs to be imported again if you already imported it into your project for you to see these changes.,- Fixed missing `UNITY_INCLUDE_TESTS` constraint in test assembly definition."
      },
      "upmCi": {
        "footprint": "201499e296fcd9e475e1c415cd2f97a8f5422fb2"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "13fd4c583e33bc55a2002a74574fc713d069bb0c"
      },
      "_id": "com.unity.xr.interaction.toolkit@2.0.1",
      "_integrity": "sha512-TUblOYJNkbqnbSs5CEJ2iI2MxvN/VF04tJpxlSqrGO/CPM2YVWSJ8oHtDEK7f3QtT6VdJrJUZG8eAQAE7LUeTA==",
      "_resolved": "/tmp/com.unity.xr.interaction.toolkit@2.0.1-uw8xnnvl.tgz",
      "_from": "file:/tmp/com.unity.xr.interaction.toolkit@2.0.1-uw8xnnvl.tgz",
      "dist": {
        "shasum": "b14ad27ff91f1eb1bd85152fdd9bd35253dbf80a",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.0.1.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.0.1",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.2.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.0.0": {
      "unity": "2019.4",
      "samples": [
        {
          "displayName": "Starter Assets",
          "description": "Assets to streamline setup of behaviors, including a default set of input actions and presets for use with XR Interaction Toolkit behaviors that use the Input System.",
          "path": "Samples~/Starter Assets"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "d17d41e936d33fd0c92fb4fff0013629ecf32056"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "7c1007f607973aedebdc6d7627aa1dafce6b2930"
      },
      "_id": "com.unity.xr.interaction.toolkit@2.0.0",
      "_integrity": "sha512-CW0WqkAPNUy3/hZVg7XDFoOofYmcIjfB2SU7QF+DzhXcrGBqqB5TJRAKliwBKdNLdSKXHdz+z+JmPv+cFhZ1IA==",
      "_resolved": "/tmp/com.unity.xr.interaction.toolkit@2.0.0-ynnu3twe.tgz",
      "_from": "file:/tmp/com.unity.xr.interaction.toolkit@2.0.0-ynnu3twe.tgz",
      "dist": {
        "shasum": "64fa2613d32bf565e1ed9a9b1eeaa019a2563fe8",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.0.0.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.0.0",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains components that you can use for locomotion and drawing visuals.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.2.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.0.0-pre.7": {
      "unity": "2019.4",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "885e804853e9328e37f09f667fb6d410e0551f38"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "9f854f2ac0084349bfeefc4d585c56e486c23d13"
      },
      "_id": "com.unity.xr.interaction.toolkit@2.0.0-pre.7",
      "_integrity": "sha512-kNosfhCl6FwLsULLoutlIfesWqJ41hGsrCzAEq4WgT2a/Y3J7AuYmZHrmkakP3Rn5YbkqITqWh1hieJjktFbyQ==",
      "_resolved": "/tmp/com.unity.xr.interaction.toolkit@2.0.0-pre.7-9_zdytzf.tgz",
      "_from": "file:/tmp/com.unity.xr.interaction.toolkit@2.0.0-pre.7-9_zdytzf.tgz",
      "dist": {
        "shasum": "6583b902b9bc813ca1909a926903db25000b5bc6",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.0.0-pre.7.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.0.0-pre.7",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains helper components that you can use to extend functionality for drawing visuals and hooking in your own interaction events.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.2.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0-pre.6",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.0.0-pre.6": {
      "unity": "2019.4",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "c581e05637aae455d29ae23061e9f2c7c31ced96"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "8abd58c322ac0aca6c218e720b3af338eef9a214"
      },
      "_id": "com.unity.xr.interaction.toolkit@2.0.0-pre.6",
      "_integrity": "sha512-jRU1rYhbuxaQ9TUlsPZvdezT8R92fnkB6BpkVXKgyF5QF++fyR3T820Yq2DIcktb6qQ2WWwat928Tk9yjIeWQg==",
      "_resolved": "/pkgprom/com.unity.xr.interaction.toolkit-2.0.0-pre.6.tgz",
      "_from": "file:com.unity.xr.interaction.toolkit-2.0.0-pre.6.tgz",
      "dist": {
        "shasum": "3db259e933c80a7a513b39ac371479a83569c39e",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.0.0-pre.6.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.0.0-pre.6",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains helper components that you can use to extend functionality for drawing visuals and hooking in your own interaction events.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.2.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0-pre.6",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "2.0.0-pre.5": {
      "unity": "2019.4",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "2203416f92da7c7a54adc51f718412820243c6d2"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "c886e06cab2581f54194d2984defb4d634184529"
      },
      "_id": "com.unity.xr.interaction.toolkit@2.0.0-pre.5",
      "_integrity": "sha512-fXs4GslA+QfEnryp7QHuLBSkUR3/b2F7K2D+CESZkZMau03TvMP7F3Ob9jYSwbCrt1TSd3aM75Fmr3bA3Q+DKw==",
      "_resolved": "/pkgprom/com.unity.xr.interaction.toolkit-2.0.0-pre.5.tgz",
      "_from": "file:com.unity.xr.interaction.toolkit-2.0.0-pre.5.tgz",
      "dist": {
        "shasum": "6c63a9ab7b82c388730a59409f49ead6fbbb2b67",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-2.0.0-pre.5.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "2.0.0-pre.5",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains helper components that you can use to extend functionality for drawing visuals and hooking in your own interaction events.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.2.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.core-utils": "2.0.0-pre.5",
        "com.unity.xr.legacyinputhelpers": "2.1.8",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "1.0.0-pre.8": {
      "unity": "2019.3",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "6b1ef396f6ef8beee9f8aa5b175e02283d43bd52"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "a6033094fc552eb874d379b678279a3821b7a78a"
      },
      "_id": "com.unity.xr.interaction.toolkit@1.0.0-pre.8",
      "_integrity": "sha512-pnTz2RMf3mPfCXDWmuOjuJLVKuUMsU+u23cez3I/ag1csdThRJwdV5gVayAZlQsbtyc2gp/AoqOhwa3dmx5LLA==",
      "_resolved": "/pkgprom/com.unity.xr.interaction.toolkit-1.0.0-pre.8.tgz",
      "_from": "file:com.unity.xr.interaction.toolkit-1.0.0-pre.8.tgz",
      "dist": {
        "shasum": "16dbcbe4e1d349f906e2b4c5d86a8e86784db0b5",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-1.0.0-pre.8.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "1.0.0-pre.8",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains helper components that you can use to extend functionality for drawing visuals and hooking in your own interaction events.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.0.2",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.7",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.modules.physics": "1.0.0"
      }
    },
    "1.0.0-pre.6": {
      "unity": "2019.3",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "a7289b63fc62573dfad82c23f74da61c91f9b3e5"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "a9226ad2a0a6635d0fece6bc6ab9e8b96c626f96"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.interaction.toolkit-1.0.0-pre.6.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@1.0.0-pre.6",
      "dist": {
        "shasum": "bc4f8bababbec3c0386cbcf517390cc1f8d8b619",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-1.0.0-pre.6.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "1.0.0-pre.6",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains helper components that you can use to extend functionality for drawing visuals and hooking in your own interaction events.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.0.2",
        "com.unity.ugui": "1.0.0",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.7"
      }
    },
    "1.0.0-pre.5": {
      "unity": "2019.3",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "79f050c53a6ce74093000e5bb333107ec5ae60d4"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "6e00ed515cb1d7d8911713d67f2d0e8bf440af26"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.interaction.toolkit-1.0.0-pre.5.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@1.0.0-pre.5",
      "dist": {
        "shasum": "8fa5b941c5175a24d9f52382347e93d321715c56",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-1.0.0-pre.5.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "1.0.0-pre.5",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains helper components that you can use to extend functionality for drawing visuals and hooking in your own interaction events.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.0.2",
        "com.unity.ugui": "1.0.0",
        "com.unity.modules.audio": "1.0.0",
        "com.unity.modules.imgui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.7"
      }
    },
    "1.0.0-pre.4": {
      "unity": "2019.3",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "dc635380a9b9e9a1c9ff1d59d60816d94feeb0ae"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "ce29e6f82e35cdca8ca8bbc4a5a3393c1aa2b919"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.interaction.toolkit-1.0.0-pre.4.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@1.0.0-pre.4",
      "dist": {
        "shasum": "15791b8c00becff30c852bc688f129272d12d523",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-1.0.0-pre.4.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "1.0.0-pre.4",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains helper components that you can use to extend functionality for drawing visuals and hooking in your own interaction events.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.0.2",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.7"
      }
    },
    "1.0.0-pre.3": {
      "unity": "2019.3",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "c7b7baba0e691e491e415fab9a338c20be99f5fd"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "fcfe2848311605a0ac56242c26c9c684eccebdb3"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.interaction.toolkit-1.0.0-pre.3.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@1.0.0-pre.3",
      "dist": {
        "shasum": "2f18d4bb65e1938281022bf42a39bfa4eda912cf",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-1.0.0-pre.3.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "1.0.0-pre.3",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains helper components that you can use to extend functionality for drawing visuals and hooking in your own interaction events.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.0.2",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.7"
      }
    },
    "1.0.0-pre.2": {
      "unity": "2019.3",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "0b5a1bf2446c766116233c88f230a4d799582119"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "e0a36e883dcef9c577ca5a22ece8061c215e9568"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.interaction.toolkit-1.0.0-pre.2.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@1.0.0-pre.2",
      "dist": {
        "shasum": "bc4f45cbd89e4de85c85099644d88b445a7af669",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-1.0.0-pre.2.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "1.0.0-pre.2",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains helper components that you can use to extend functionality for drawing visuals and hooking in your own interaction events.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.0.1",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.7"
      }
    },
    "1.0.0-pre.1": {
      "unity": "2019.3",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "078a780438729b7b4f524ead5f7258e9272164cc"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "5a694db6913530996204bc27509d34e601c1bac8"
      },
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@1.0.0-pre.1",
      "dist": {
        "shasum": "4c8ec428da7949dfa69ae80b6f2a4a72e7e17c42",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-1.0.0-pre.1.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "1.0.0-pre.1",
      "description": "A high-level, component-based, interaction system for creating VR and AR experiences. It provides a framework that makes 3D and UI interactions available from Unity input events. The core of this system is a set of base Interactor and Interactable components, and an Interaction Manager that ties these two types of components together. It also contains helper components that you can use to extend functionality for drawing visuals and hooking in your own interaction events.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.0.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.4"
      }
    },
    "0.10.0-preview.7": {
      "unity": "2019.3",
      "samples": [
        {
          "displayName": "Default Input Actions",
          "description": "Default set of input actions and presets for use with XR Interaction Toolkit behaviors that utilize the Input System.",
          "path": "Samples~/Default Input Actions"
        },
        {
          "displayName": "XR Device Simulator",
          "description": "Assets related to the simulation of XR HMD and controllers.",
          "path": "Samples~/XR Device Simulator"
        }
      ],
      "upmCi": {
        "footprint": "b0535717bf75c50211dd1325fc15f72bc5600fb0"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "type": "git",
        "revision": "e3497384909d90ca79c628e5de8c94526e7b6e03"
      },
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@0.10.0-preview.7",
      "dist": {
        "shasum": "e9509002be2f0e1f634dd64aa6e6e3ecb9fbf39c",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-0.10.0-preview.7.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "0.10.0-preview.7",
      "description": "XR Interaction toolkit for creating VR and AR experiences.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.inputsystem": "1.0.0",
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "2.1.4"
      }
    },
    "0.9.4-preview": {
      "unity": "2019.3",
      "repository": {
        "footprint": "b076a7f1a7644d9f143165f48050d783be6a1d16",
        "type": "git",
        "url": "git+https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "revision": "2f0602c46ea4bbb75f2cfd5833dcc00aa9fdd038"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.interaction.toolkit-0.9.4-preview.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@0.9.4-preview",
      "dist": {
        "shasum": "cf8b089f81afb529676a84079c85e8a119d67a22",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-0.9.4-preview.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "0.9.4-preview",
      "description": "XR Interaction toolkit for creating VR and AR experiences.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "1.3.11"
      }
    },
    "0.9.3-preview": {
      "unity": "2019.3",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "revision": "67c2fadc6749d532adcb29c04a0438e396a75cbc"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.interaction.toolkit-0.9.3-preview.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@0.9.3-preview",
      "dist": {
        "shasum": "65414d7bae0cef05f5f1b7fc14a6ed681f918775",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-0.9.3-preview.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "0.9.3-preview",
      "description": "XR Interaction toolkit for creating VR and AR experiences.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "1.3.8"
      }
    },
    "0.9.2-preview": {
      "unity": "2019.3",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "revision": "60643c30a704a4f798f8e53260cd63aded49c6b9"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.interaction.toolkit-0.9.2-preview.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@0.9.2-preview",
      "dist": {
        "shasum": "d55cd92ae286548794eaf002af23ea9182f678c3",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-0.9.2-preview.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "0.9.2-preview",
      "description": "XR Interaction toolkit for creating VR and AR experiences.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "1.3.8"
      }
    },
    "0.9.1-preview": {
      "unity": "2019.3",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "revision": "34c4d9434ed44e8ec8b99d33714642358e675e55"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.interaction.toolkit-0.9.1-preview.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@0.9.1-preview",
      "dist": {
        "shasum": "0c005b01351c92029e48d288d81da3673ba20cef",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-0.9.1-preview.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "0.9.1-preview",
      "description": "XR Interaction toolkit for creating VR and AR experiences.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "1.3.9"
      }
    },
    "0.9.0-preview": {
      "unity": "2019.3",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "revision": "9463ac20024db58487c995e508662d7d9fef3122"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.xr.interaction.toolkit-0.9.0-preview.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/com.unity.xr.interaction.toolkit#readme",
      "_id": "com.unity.xr.interaction.toolkit@0.9.0-preview",
      "dist": {
        "shasum": "3317fb75668f2f0d6cbf2071a8e9e3e1399a960a",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-0.9.0-preview.tgz"
      },
      "name": "com.unity.xr.interaction.toolkit",
      "version": "0.9.0-preview",
      "description": "XR Interaction toolkit for creating VR and AR experiences.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "category": "XR",
      "dependencies": {
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "1.3.9"
      }
    },
    "0.0.6-preview": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/com.unity.xr.interaction.toolkit.git",
        "revision": "6b13c5f33dd2738f9eb5ae36cd1136644b53f63a"
      },
      "dist": {
        "shasum": "f8c347f602e8269e9fa82ab2ed147bf620dde9fc",
        "tarball": "https://download.packages.unity.com/com.unity.xr.interaction.toolkit/-/com.unity.xr.interaction.toolkit-0.0.6-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.xr.interaction.toolkit@0.0.6-preview",
      "unity": "2019.1",
      "name": "com.unity.xr.interaction.toolkit",
      "version": "0.0.6-preview",
      "description": "XR Interaction toolkit for creating VR and AR experiences.",
      "displayName": "XR Interaction Toolkit",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "XR",
        "VR",
        "toolkit",
        "interaction"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0",
        "com.unity.xr.legacyinputhelpers": "1.3.7"
      }
    }
  },
  "etag": "\"babc8b35445cd6abe91b74a36cf5d799\"",
  "time": {
    "2.4.0": "2023-06-20T06:59:39Z",
    "2.4.0-pre.2": "2023-06-02T07:45:18Z",
    "2.4.0-pre.1": "2023-05-30T15:18:55Z",
    "2.3.2": "2023-05-05T11:03:14Z",
    "2.3.1": "2023-04-06T09:36:32Z",
    "2.3.0": "2023-02-23T16:53:05Z",
    "2.3.0-pre.1": "2022-12-09T22:19:23Z",
    "2.0.4": "2022-11-03T09:39:33Z",
    "2.2.0": "2022-10-10T09:41:22Z",
    "2.0.3": "2022-08-15T07:55:37Z",
    "2.1.1": "2022-08-12T08:51:02Z",
    "2.1.0-pre.1": "2022-05-11T19:15:49Z",
    "2.0.2": "2022-05-06T17:58:03Z",
    "2.0.1": "2022-03-09T12:34:10Z",
    "2.0.0": "2022-02-21T15:56:42Z",
    "2.0.0-pre.7": "2022-02-04T14:44:55Z",
    "2.0.0-pre.6": "2021-12-20T12:27:55Z",
    "2.0.0-pre.5": "2021-11-22T19:24:28Z",
    "1.0.0-pre.8": "2021-10-27T06:31:42Z",
    "1.0.0-pre.6": "2021-09-15T00:09:16Z",
    "1.0.0-pre.5": "2021-08-04T06:05:28Z",
    "1.0.0-pre.4": "2021-05-19T00:31:55Z",
    "1.0.0-pre.3": "2021-03-19T00:58:02Z",
    "1.0.0-pre.2": "2021-01-25T19:49:12Z",
    "1.0.0-pre.1": "2020-11-17T19:12:37Z",
    "0.10.0-preview.7": "2020-11-05T16:51:05Z",
    "0.9.4-preview": "2020-04-07T19:58:49Z",
    "0.9.3-preview": "2020-01-27T21:55:02Z",
    "0.9.2-preview": "2019-12-17T19:22:30Z",
    "0.9.1-preview": "2019-12-13T00:00:09Z",
    "0.9.0-preview": "2019-12-10T20:00:08Z",
    "0.0.6-preview": "2019-11-05T17:07:20Z"
  }
}
