{
  "_id": "com.unity.inputsystem",
  "name": "com.unity.inputsystem",
  "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
  "provider": "upm",
  "category": "",
  "dist-tags": {
    "latest": "1.6.1"
  },
  "versions": {
    "1.6.1": {
      "unity": "2019.4",
      "_upm": {
        "changelog": "### Fixed\n- Fixed issue with compiling in Unity 2022.1 and with XR Toolkit by guarding the experimental UITK Asset Editor code completely."
      },
      "upmCi": {
        "footprint": "32b525c35b166343b19e496f1432c6d50bcd5637"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.inputsystem@1.6/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "6e8cbe050db664506f3400e4d0735f9e4b604915"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Unity Remote",
          "description": "An example with a simple scene for trying out the Unity Remote app.",
          "path": "Samples~/UnityRemote"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "dist": {
        "shasum": "5fa9a09ca8147d3ec76a81cada563823be5b0554",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.6.1.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.6.1",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.5.1": {
      "unity": "2019.4",
      "_upm": {
        "changelog": "### Fixed\n- Fixed unclosed profiler marker in `InvokeCallbacksSafe_AnyCallbackReturnsTrue` which would lead to eventually broken profiler traces in some cases like using `PlayerInput` (case ISXB-393).\n- Fixed InputAction.bindings.count not getting correctly updated after removing bindings with Erase().\n- Fixed an issue where connecting a gamepad in the editor with certain settings will cause memory and performance to degrade ([case UUM-19480](https://issuetracker.unity3d.com/product/unity/issues/guid/UUM-19480)).\n- Fixed issue leading to a stack overflow crash during device initialization in `InsertControlBitRangeNode` (case ISXB-405).\n- Fixed the issue where saving and loading override bindings to JSON would set unassigned overrides (that were `null`) to assigned overrides (as an empty string `\"\"`)."
      },
      "upmCi": {
        "footprint": "2cae0097d3dad2d9ef12e11b093eb6055682b135"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.inputsystem@1.5/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "3062b2c3402b5f7f435d79acbd6011a621bfeb3e"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Unity Remote",
          "description": "An example with a simple scene for trying out the Unity Remote app.",
          "path": "Samples~/UnityRemote"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "dist": {
        "shasum": "4d60ed97a73ba7cd4cc68353d6ab02489e99d731",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.5.1.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.5.1",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.5.0": {
      "unity": "2019.4",
      "_upm": {
        "changelog": "### Added\n- Added support for reading Tracking State in [TrackedPoseDriver](xref:UnityEngine.InputSystem.XR.TrackedPoseDriver) to constrain whether the input pose is applied to the Transform. This should be used when the device supports valid flags for the position and rotation values, which is the case for XR poses.\n- Added `InputSettings.shortcutKeysConsumeInput`. This allows programmatic access to opt-in to the enhanced shortcut key behaviour ([case ISXB-254](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-254))).\n- Significantly optimized cost of `ReadValue`/`ReadUnprocessedValueFromState`/`WriteValueIntoState` for some control types. Optimization is opt-in for now, please call `InputSystem.settings.SetInternalFeatureFlag(\"USE_OPTIMIZED_CONTROLS\", true);` in your project to enable it. You can observe which controls are optimized by looking at new optimized column in device debugger. You will need to call a new `InputControl.ApplyParameterChanges()` method if the code is changing `AxisControl` fields after initial setup is done.\n- Added the ability to change the origin positioning and movement behaviour of the OnScreenStick (`OnScreenStick.cs`) via the new `behaviour` property. This currently supports three modes of operation, two of which are new in addition to the previous behaviour. Based on the user contribution from [eblabs](https://github.com/eblabs) in [#658](https://github.com/Unity-Technologies/InputSystem/pull/658).\n- Significantly optimized cost of `InputAction.ReadValue` and `InputControl.ReadValue` calls by introducing caching behaviour to input controls. Input controls now keep track of whether their underlying state has been changed and only read the value from the underlying state and apply processors when absolutely necessary. Optimization is opt-in for now, please call `InputSystem.settings.SetInternalFeatureFlag(\"USE_READ_VALUE_CACHING\", true);` in your project to enable it. If there are issues try enabling `InputSystem.settings.SetInternalFeatureFlag(\"PARANOID_READ_VALUE_CACHING_CHECKS\", true);` and check in the console if there are any errors regarding caching.\n- Added a note in the [supported devices page](Documentation~/SupportedDevices.md) about DualSense support for Android devices.\n- Exposed `displayIndex` property for `Pointer`, `Touchscreen`, `TouchControl`, `TouchState`, `Mouse`, `MouseState` which enables look up of the logical screen associated with a pointer event via (display documentation)[https://docs.unity3d.com/ScriptReference/Display.html]\n\n### Fixed\n- Fixed composite bindings incorrectly getting a control scheme assigned when pasting into input asset editor with a control scheme selected.\n- Fixed an issue on PS5 where device disconnected events that happen while the app is in the background are missed causing orphaned devices to hang around forever and exceptions when the same device is added again ([case UUM-7842](https://issuetracker.unity3d.com/product/unity/issues/guid/UUM-6744)).\n- Fixed Switch Pro, DualShock 4, DualSense gamepads becoming current on PC/macOS when no controls are changing ([case ISXB-223](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-223))).\n- Fixed an issue that made OnScreenStick unusable when used in conjunction with PlayerInput in Auto-Switch devices mode, or with any code that changes user/device pairing on unsued device activity being detected ([case ISXB-48](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-48)).\n- Fixed issue where input events were being suppressed during interactive action rebinding even when when their controls were excluded ([case ISXB-367](https://issuetracker.unity3d.com/issues/mouse-position-and-mouse-click-input-not-recognized-when-rebinding-is-active)).\n- Removed unneeded check that could trigger a NotImplementedException when binding to a Usage (e.g. Submit) ([case ISXB-373](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-373)).\n- Display a warning instead of throwing a NotImplementedException when loading binding overrides from json when some of the entries have become outdated ([case ISXB-375](https://issuetracker.unity3d.com/product/unity/issues/guid/ISXB-375)).\n\n### Actions\n- Extended input action code generator (`InputActionCodeGenerator.cs`) to support optional registration and unregistration of callbacks for multiple callback instances via `AddCallbacks(...)` and `RemoveCallbacks(...)` part of the generated code. Contribution by [Ramobo](https://github.com/Ramobo) in [#889](https://github.com/Unity-Technologies/InputSystem/pull/889).\n\n### Changed\n- Changed define requirements of `Unity.InputSystem.TestFramework`, so that it can be used by other packages without setting the `com.unity.inputsystem` package to be testable in the project manifest."
      },
      "upmCi": {
        "footprint": "3b022697bf2c939fee671364f28690252d8a508b"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.inputsystem@1.5/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "eb5279b52c65b1ba176b373a6ebf170fbc564273"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Unity Remote",
          "description": "An example with a simple scene for trying out the Unity Remote app.",
          "path": "Samples~/UnityRemote"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "dist": {
        "shasum": "dbb40d6be5d859d2d7639c84c3e12e691882ae16",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.5.0.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.5.0",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.4.4": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "d20d3853d26dd380a822266e07f495666772006b"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "59db7b7bcc31bad254947e3189e6ec125f67e3e7"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Unity Remote",
          "description": "An example with a simple scene for trying out the Unity Remote app.",
          "path": "Samples~/UnityRemote"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "dist": {
        "shasum": "83aa299dbaf0385fd0c8333f82addfa83b76c013",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.4.4.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.4.4",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.4.3": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "089fdfd7a0f1792e18976a994a39577ade0be70b"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "4176ff70ca01b934b7818035a5727c07bcaabb0d"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Unity Remote",
          "description": "An example with a simple scene for trying out the Unity Remote app.",
          "path": "Samples~/UnityRemote"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "dist": {
        "shasum": "5a596e1565a616ab3c63214b24bceb63dd8c7016",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.4.3.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.4.3",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.4.2": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "e160a343267e1e2f5c669cfac97fc992f6e44ea9"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "631623e8dc57356af6692b9ef7822333edf45f37"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Unity Remote",
          "description": "An example with a simple scene for trying out the Unity Remote app.",
          "path": "Samples~/UnityRemote"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "dist": {
        "shasum": "cb751ab0a49873ebad5d7cbf3040ac50bc0515b2",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.4.2.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.4.2",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.4.1": {
      "unity": "2019.4",
      "_upm": {
        "changelog": "### Fixed\n- Fixed composite touchscreen controls were not firing an action if screen was touched before enabling the action ([case ISXB-98](https://jira.unity3d.com/browse/ISXB-98))."
      },
      "upmCi": {
        "footprint": "ddd60d3a3d5ec729720179c0fbfefeec480eb64c"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "640348c45464bc94b38877d83653512da2c90453"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Unity Remote",
          "description": "An example with a simple scene for trying out the Unity Remote app.",
          "path": "Samples~/UnityRemote"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_id": "com.unity.inputsystem@1.4.1",
      "_integrity": "sha512-fszu0fPpfVFDRxUBLTyfDN9aaXsHn2e5ZeNHabgOujEH4LyLYJsXuxuOkrojGCxTCmv9w0lBtN8KZhDJKfIN0Q==",
      "_resolved": "/tmp/com.unity.inputsystem@1.4.1-4cstmjp0.tgz",
      "_from": "file:/tmp/com.unity.inputsystem@1.4.1-4cstmjp0.tgz",
      "dist": {
        "shasum": "4ce577b1f90a6b2224460858bad9fa339b57bcfd",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.4.1.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.4.1",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.3.0": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "9b3507e700a475d3fc7c6406be352fd3f6b2e8e9"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "76d3fd182183dff9e9793431de614fd1e69e363c"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_id": "com.unity.inputsystem@1.3.0",
      "_integrity": "sha512-jdtdzLim7p1jOpC3evBjmXKhVjiSyZ1oydaLe4r0fa+KpgZIJS5pnL33qQ/vyxokGxCRuAepcMrPPXniqSHnSw==",
      "_resolved": "/pkgprom/com.unity.inputsystem-1.3.0.tgz",
      "_from": "file:com.unity.inputsystem-1.3.0.tgz",
      "dist": {
        "shasum": "6216fe44510b32854685d12c1d899c237b7674b6",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.3.0.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.3.0",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.2.0": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "0ea9728a1dafe047db812a3f54cc61ea0ebca53d"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "0343e557f75946cf6fad4be48dd10276d535f490"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_id": "com.unity.inputsystem@1.2.0",
      "_integrity": "sha512-mAn03ry7B0JGMFyVIfsdTPGo1fheYRJrGK4c/Vt2IX8zKOtlL1thXYIIWUptOzMcYnjxbgLqa9RtNBKzAFha7Q==",
      "_resolved": "/pkgprom/com.unity.inputsystem-1.2.0.tgz",
      "_from": "file:com.unity.inputsystem-1.2.0.tgz",
      "dist": {
        "shasum": "b415a8f8c6358e524fbb5f3a2d8ff8ee40f71f3a",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.2.0.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.2.0",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.1.1": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "cbe084ce957665142a26dc1b81a64d43806a9627"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "e1f0221c75ac8bcc0f4d82e8eba6197ca3f9cf50"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.inputsystem-1.1.1.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.1.1",
      "dist": {
        "shasum": "29ea715025c5878b7f9d5c5a2482bf848c87ebcc",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.1.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.1.1",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.1.0-pre.6": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "452b473986aaa3ef7cfae5a7b951e66c28223026"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "4c7b1dad3c6ad5941f485eec093467c7b14e3bf6"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "UI vs. Game Input",
          "description": "An example that shows how to deal with ambiguities that may arrise when overlaying interactive UI elements on top of a game scene.",
          "path": "Samples~/UIvsGameInput"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.inputsystem-1.1.0-pre.6.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.1.0-pre.6",
      "dist": {
        "shasum": "4c4b3cc383f333c78d60810a44ad05c5b13bf659",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.0-pre.6.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.1.0-pre.6",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.1.0-pre.5": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "3e703941c068e66427af80770640196a905fdd4a"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "235baf96acbccfbca3f8e6543cc535d861c20db4"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.inputsystem-1.1.0-pre.5.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.1.0-pre.5",
      "dist": {
        "shasum": "f1ed0a1b58693a28d95aa9060acd7918d2adc50a",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.0-pre.5.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.1.0-pre.5",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": "",
      "dependencies": {
        "com.unity.modules.uielements": "1.0.0"
      }
    },
    "1.1.0-preview.3": {
      "unity": "2019.4",
      "upmCi": {
        "footprint": "61aa6b4ccd426575390a8b8286caade43ad92888"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "da76cf4dabba32fc554ef8b0a5bf9f0ebd3b3196"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.inputsystem-1.1.0-preview.3.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.1.0-preview.3",
      "dist": {
        "shasum": "e9d9ad83c77e9edbb1b20015dc12b9dbcaedaa34",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.0-preview.3.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.1.0-preview.3",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": ""
    },
    "1.0.2": {
      "unity": "2019.1",
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "041def76515febb36a83d1f928cfb7aefb85176c"
      },
      "upmCi": {
        "footprint": "16cf76fdb147ffbf6809fd1ff7d082bb6275010d"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.0.2",
      "dist": {
        "shasum": "db9419f042ac68e1d1669aa4f0b76e2b7c764471",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.2.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.0.2",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": ""
    },
    "1.0.1": {
      "unity": "2019.1",
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "f757ff8ed7383896d71a608a755c1c39373cf4c8"
      },
      "upmCi": {
        "footprint": "59f8f6035ad641493f6a0c986a495cb248b48f08"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.0.1",
      "dist": {
        "shasum": "e24bc2a627e4377f90708e8be469b54cdef883aa",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.1.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.0.1",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": ""
    },
    "1.1.0-preview.2": {
      "unity": "2019.4",
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "0a2e59083e312828fc806169de949cbb518327e5"
      },
      "upmCi": {
        "footprint": "5539ad9ab49e931c6f13e74068ba62a2d4108707"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.inputsystem-1.1.0-preview.2.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.1.0-preview.2",
      "dist": {
        "shasum": "94cd6165bba6a51fafaef8e20d96ff6c81814977",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.0-preview.2.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.1.0-preview.2",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": ""
    },
    "1.1.0-preview.1": {
      "unity": "2019.4",
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "type": "git",
        "revision": "eea5e3fef64465fe0af6252eb2b931b6c82c680e"
      },
      "upmCi": {
        "footprint": "58bb702704619948c5a51800b7c20122a12d413e"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.inputsystem-1.1.0-preview.1.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.1.0-preview.1",
      "dist": {
        "shasum": "bec9c0e27ed13c14d6e1f9fe84a64ace959cebbe",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.1.0-preview.1.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.1.0-preview.1",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "category": ""
    },
    "1.0.0": {
      "unity": "2019.1",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "0617549352dbfae87698b044d343b97727dd6581"
      },
      "upmCi": {
        "footprint": "f6129c6fd91afee16e3739ad949e5e38c7bd908e"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.0.0",
      "_shasum": "30174349065dc51b67bd08dcf6178b84bd5f10e4",
      "_resolved": "file:../../../var/folders/tn/t8btbstx12l33r08ww_2c0_1_q91g9/T/com.unity.inputsystem-1.0.0.tgz",
      "_from": "../../../var/folders/tn/t8btbstx12l33r08ww_2c0_1_q91g9/T/com.unity.inputsystem-1.0.0.tgz",
      "scripts": {},
      "dist": {
        "shasum": "30174349065dc51b67bd08dcf6178b84bd5f10e4",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.0.0",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ]
    },
    "1.0.0-preview.7": {
      "unity": "2019.1",
      "repository": {
        "footprint": "ed04a58c1789ae2f34a9d29017aee30604fb1e32",
        "type": "git",
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "dc14c49beb7e3577bbf5f731cc0244cfe70b17a3"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.inputsystem-1.0.0-preview.7.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.0.0-preview.7",
      "dist": {
        "shasum": "32a47d967af6901daef0370aca306bd2d6afe836",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.7.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.0.0-preview.7",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ]
    },
    "1.0.0-preview.6": {
      "unity": "2019.1",
      "repository": {
        "footprint": "c0e72206c968a3983f445711b4cca00b8e98f91c",
        "type": "git",
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "7320077bdaa48fb7d63edaa66a246694a96a6bb7"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "EditorWindow Demo",
          "description": "A simple example of how to use the input system from within EditorWindow code.",
          "path": "Samples~/EditorWindowDemo"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.inputsystem-1.0.0-preview.6.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.0.0-preview.6",
      "dist": {
        "shasum": "990095fc67530e7457101c431889d4142f9e80dc",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.6.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.0.0-preview.6",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "1.0.0-preview.5": {
      "unity": "2019.1",
      "repository": {
        "footprint": "eef2edc406261cf6293acd8e69b61f92cc61eae7",
        "type": "git",
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "8f61b4ba7176b0241f868bad0c3bac631e8d8b25"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "EditorWindow Demo",
          "description": "A simple example of how to use the input system from within EditorWindow code.",
          "path": "Samples~/EditorWindowDemo"
        },
        {
          "displayName": "Gamepad Mouse Cursor",
          "description": "An example that shows how to use the gamepad for driving a mouse cursor for use with UIs.",
          "path": "Samples~/GamepadMouseCursor"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Simple Multiplayer",
          "description": "Demonstrates how to set up a simple local multiplayer scenario.",
          "path": "Samples~/SimpleMultiplayer"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.inputsystem-1.0.0-preview.5.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.0.0-preview.5",
      "dist": {
        "shasum": "19308b558640f970181739c69dac844a756a40f3",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.5.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.0.0-preview.5",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "1.0.0-preview.4": {
      "unity": "2019.1",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "175eee8e35e0d808ac0decdc8c21e7f0cc708cd1"
      },
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "EditorWindow Demo",
          "description": "A simple example of how to use the input system from within EditorWindow code.",
          "path": "Samples~/EditorWindowDemo"
        },
        {
          "displayName": "In-Game Hints",
          "description": "Demonstrates how to create in-game hints in the UI which reflect current bindings and active control schemes.",
          "path": "Samples~/InGameHints"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "Input Recorder",
          "description": "Shows how to capture and replay input events. Also useful by itself to debug input event sequences.",
          "path": "Samples~/InputRecorder"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Rebinding UI",
          "description": "An example UI component that demonstrates how to create UI for rebinding actions.",
          "path": "Samples~/RebindingUI"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.inputsystem-1.0.0-preview.4.tgz",
      "readmeFilename": "README.md",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/InputSystem/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/InputSystem#readme",
      "_id": "com.unity.inputsystem@1.0.0-preview.4",
      "dist": {
        "shasum": "5d0630f0447f1a53ebcdcf95ffd05a5f5dadb2f7",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.4.tgz"
      },
      "name": "com.unity.inputsystem",
      "version": "1.0.0-preview.4",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "1.0.0-preview.3": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "1a22faf98a0be83d8d0df97935b6ceea6835ae2f"
      },
      "dist": {
        "shasum": "bc9da2486f1fadaadc594c330893010ac7faab07",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.3.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@1.0.0-preview.3",
      "unity": "2019.1",
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "EditorWindow Demo",
          "description": "A simple example of how to use the input system from within EditorWindow code.",
          "path": "Samples~/EditorWindowDemo"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "name": "com.unity.inputsystem",
      "version": "1.0.0-preview.3",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "1.0.0-preview.2": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "aacd1d924d46ee53751d6bbae6a6c200a8cfb535"
      },
      "dist": {
        "shasum": "4709f3c25fb7b5d6166d3b0122ed7ea645e77c21",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.2.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@1.0.0-preview.2",
      "unity": "2019.1",
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "EditorWindow Demo",
          "description": "A simple example of how to use the input system from within EditorWindow code.",
          "path": "Samples~/EditorWindowDemo"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "name": "com.unity.inputsystem",
      "version": "1.0.0-preview.2",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "1.0.0-preview.1": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "e36044f3f26faeea8580d08ecf14ead1d72d8a49"
      },
      "dist": {
        "shasum": "ea4c648cce23c512b607a2f22e9debc9e0b5cfd0",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.1.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@1.0.0-preview.1",
      "unity": "2019.1",
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "Custom Device Usages",
          "description": "Shows how to tag devices with custom usage strings that can be used, for example, to distinguish multiple instances of the same type of device (e.g. 'Gamepad') based on how the device is used (e.g. 'Player1' vs 'Player2' or 'LeftHand' vs 'RightHand').",
          "path": "Samples~/CustomDeviceUsages"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "name": "com.unity.inputsystem",
      "version": "1.0.0-preview.1",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "type": "asset",
      "host": "editor",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "1.0.0-preview": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "3a5d7d44a448dd2c0724778bb763f7d85c40e5e0"
      },
      "dist": {
        "shasum": "640f7291b80b8bc5a69e867145291471c73b0e6e",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-1.0.0-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@1.0.0-preview",
      "unity": "2019.1",
      "samples": [
        {
          "displayName": "Custom Binding Composite",
          "description": "Shows how to implement a custom composite binding.",
          "path": "Samples~/CustomComposite"
        },
        {
          "displayName": "Custom Device",
          "description": "Shows how to implement a custom input device.",
          "path": "Samples~/CustomDevice"
        },
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "On-Screen Controls",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "Simple Demo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "name": "com.unity.inputsystem",
      "version": "1.0.0-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "0.9.6-preview": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "883b5e1b72ce4371feb499a2f2370fcc6dc3dbf5"
      },
      "dist": {
        "shasum": "dda272616914483e786ad557c321f706e45b5c60",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.6-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.9.6-preview",
      "unity": "2019.1",
      "samples": [
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "On-Screen Controls Sample",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "SimpleDemo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Tanks Demo",
          "description": "The Unity Tanks demo game, converted to using the Input System package, and with a custom input binding screen. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TanksDemo"
        },
        {
          "displayName": "Touch Samples",
          "description": "A series of sample scenes for using touch input with the Input System package. This sample is not actually part of the package, but needs to be downloaded.",
          "path": "Samples~/TouchSamples"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "name": "com.unity.inputsystem",
      "version": "0.9.6-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "0.9.5-preview": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "a37a3801e190d1eb2c871ee221ea08415cedfdd4"
      },
      "dist": {
        "shasum": "7e77f8983bc511361e2ae8664d1de936ac07cf99",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.5-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.9.5-preview",
      "unity": "2019.1",
      "samples": [
        {
          "displayName": "InputDeviceTester",
          "description": "A scene containing UI to visualize the controls on various supported input devices.",
          "path": "Samples~/InputDeviceTester"
        },
        {
          "displayName": "On-Screen Controls Sample",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "SimpleDemo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "name": "com.unity.inputsystem",
      "version": "0.9.5-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "0.9.4-preview": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "2f9ca0aa7179c0d194f983341bc13da08d7fa2df"
      },
      "dist": {
        "shasum": "e061065a9c6d4665de8aa74611e559139c3286f2",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.4-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.9.4-preview",
      "unity": "2019.1",
      "samples": [
        {
          "displayName": "On-Screen Controls Sample",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "SimpleDemo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "name": "com.unity.inputsystem",
      "version": "0.9.4-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "0.9.3-preview": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "0953592de295b4c9ed91e6e1a3dc26a9c2e227cf"
      },
      "dist": {
        "shasum": "287e433d535ce36dd52c831c6e312803779e61bc",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.3-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.9.3-preview",
      "unity": "2019.1",
      "samples": [
        {
          "displayName": "On-Screen Controls Sample",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "SimpleDemo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "name": "com.unity.inputsystem",
      "version": "0.9.3-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "0.9.2-preview": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "5615a30e9c3ec24da2c44fa366eccd1c069fe9c1"
      },
      "dist": {
        "shasum": "40ae4f1756791d0dcd9ef9c32269589d56c616f2",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.2-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.9.2-preview",
      "unity": "2019.1",
      "samples": [
        {
          "displayName": "On-Screen Controls Sample",
          "description": "Demonstrates a simple setup for an on-screen joystick.",
          "path": "Samples~/OnScreenControls"
        },
        {
          "displayName": "SimpleDemo",
          "description": "A walkthrough of a simple character controller that demonstrates several techniques for working with the input system. See the README.md file in the sample for details.",
          "path": "Samples~/SimpleDemo"
        },
        {
          "displayName": "Visualizers",
          "description": "Several example visualizations of input controls/devices and input actions.",
          "path": "Samples~/Visualizers"
        }
      ],
      "name": "com.unity.inputsystem",
      "version": "0.9.2-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "0.9.1-preview": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "3428d43073891c136bd5b31aae9c6b05c96cb6d2"
      },
      "dist": {
        "shasum": "a27384a41f9147230856247383f63f13b1f836c6",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.1-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.9.1-preview",
      "unity": "2019.1",
      "name": "com.unity.inputsystem",
      "version": "0.9.1-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "0.9.0-preview": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/InputSystem.git",
        "revision": "eb5b812b1324edb8aa51c9d2d7982e5fab1cbe66"
      },
      "dist": {
        "shasum": "622fdc8c9eb120005b3fd25de5b446b9de2df07d",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.9.0-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.9.0-preview",
      "unity": "2019.1",
      "name": "com.unity.inputsystem",
      "version": "0.9.0-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "0.2.10-preview": {
      "repository": {
        "type": "git",
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "bdb556e64749c2dbd7218e31c080d48f3053388f"
      },
      "dist": {
        "shasum": "616a1d401ebeb05b5f003a3dda3b8e40864eeb5f",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.2.10-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.2.10-preview",
      "unity": "2019.1",
      "name": "com.unity.inputsystem",
      "version": "0.2.10-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {
        "com.unity.ugui": "1.0.0"
      }
    },
    "0.2.8-preview": {
      "repository": {
        "type": "git",
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "bdb556e64749c2dbd7218e31c080d48f3053388f"
      },
      "dist": {
        "shasum": "7522e2ca1cad6ef43a8152bee1f5fd7732b66bbf",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.2.8-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.2.8-preview",
      "unity": "2019.1",
      "name": "com.unity.inputsystem",
      "version": "0.2.8-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {}
    },
    "0.2.6-preview": {
      "repository": {
        "type": "git",
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "bdb556e64749c2dbd7218e31c080d48f3053388f"
      },
      "dist": {
        "shasum": "efba903cc2a6f5aa32c6ab64352caf70075437a0",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.2.6-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.2.6-preview",
      "unity": "2019.1",
      "name": "com.unity.inputsystem",
      "version": "0.2.6-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {}
    },
    "0.2.1-preview": {
      "repository": {
        "type": "git",
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "bdb556e64749c2dbd7218e31c080d48f3053388f"
      },
      "dist": {
        "shasum": "e526a2cb90b368b4bcb8cc78d1984dcf09f4f077",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.2.1-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.2.1-preview",
      "unity": "2018.3",
      "name": "com.unity.inputsystem",
      "version": "0.2.1-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {}
    },
    "0.2.0-preview": {
      "repository": {
        "type": "git",
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "bdb556e64749c2dbd7218e31c080d48f3053388f"
      },
      "dist": {
        "shasum": "cc78cc3a25f8806c00b9652ac9687c6a06aa55de",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.2.0-preview.tgz"
      },
      "scripts": {},
      "_id": "com.unity.inputsystem@0.2.0-preview",
      "unity": "2018.3",
      "name": "com.unity.inputsystem",
      "version": "0.2.0-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {}
    },
    "0.1.2-preview": {
      "repository": {
        "type": "git",
        "url": "https://github.com/Unity-Technologies/InputSystem.git",
        "revision": "bdb556e64749c2dbd7218e31c080d48f3053388f"
      },
      "dist": {
        "shasum": "e2d2d6f99389324b3dafffd176699791a45660c9",
        "tarball": "https://download.packages.unity.com/com.unity.inputsystem/-/com.unity.inputsystem-0.1.2-preview.tgz"
      },
      "_id": "com.unity.inputsystem@0.1.2-preview",
      "unity": "2018.3",
      "name": "com.unity.inputsystem",
      "version": "0.1.2-preview",
      "description": "A new input system which can be used as a more extensible and customizable alternative to Unity's classic input system in UnityEngine.Input.",
      "displayName": "Input System",
      "keywords": [
        "input",
        "events",
        "keyboard",
        "mouse",
        "gamepad",
        "touch",
        "vr",
        "xr"
      ],
      "dependencies": {}
    }
  },
  "etag": "\"832fa51ebbc7496c46ca791d347aa764\"",
  "time": {
    "1.6.1": "2023-05-27T00:49:35Z",
    "1.5.1": "2023-03-24T13:24:58Z",
    "1.5.0": "2023-01-25T09:51:23Z",
    "1.4.4": "2022-11-03T09:53:41Z",
    "1.4.3": "2022-09-29T14:03:16Z",
    "1.4.2": "2022-08-18T09:35:59Z",
    "1.4.1": "2022-06-23T12:04:20Z",
    "1.3.0": "2022-01-05T16:33:39Z",
    "1.2.0": "2021-11-02T10:28:27Z",
    "1.1.1": "2021-09-09T11:41:29Z",
    "1.1.0-pre.6": "2021-08-23T12:58:47Z",
    "1.1.0-pre.5": "2021-05-14T19:32:27Z",
    "1.1.0-preview.3": "2021-02-05T14:15:46Z",
    "1.0.2": "2021-01-21T17:57:01Z",
    "1.0.1": "2020-11-24T15:59:11Z",
    "1.1.0-preview.2": "2020-10-24T17:28:10Z",
    "1.1.0-preview.1": "2020-08-20T17:26:57Z",
    "1.0.0": "2020-04-29T19:48:10Z",
    "1.0.0-preview.7": "2020-04-17T11:19:07Z",
    "1.0.0-preview.6": "2020-03-06T20:29:34Z",
    "1.0.0-preview.5": "2020-02-14T20:42:38Z",
    "1.0.0-preview.4": "2020-01-24T10:41:06Z",
    "1.0.0-preview.3": "2019-11-14T16:03:54Z",
    "1.0.0-preview.2": "2019-11-04T15:02:58Z",
    "1.0.0-preview.1": "2019-10-11T17:02:16Z",
    "1.0.0-preview": "2019-09-20T19:02:08Z",
    "0.9.6-preview": "2019-09-06T20:02:03Z",
    "0.9.5-preview": "2019-08-29T19:01:59Z",
    "0.9.4-preview": "2019-08-20T20:02:08Z",
    "0.9.3-preview": "2019-08-15T19:02:03Z",
    "0.9.2-preview": "2019-08-09T18:02:03Z",
    "0.9.1-preview": "2019-08-08T21:01:58Z",
    "0.9.0-preview": "2019-07-19T20:02:01Z",
    "0.2.10-preview": "2019-05-17T17:01:33Z",
    "0.2.8-preview": "2019-04-23T22:01:23Z",
    "0.2.6-preview": "2019-04-03T11:58:46Z",
    "0.2.1-preview": "2019-04-03T11:58:43Z",
    "0.2.0-preview": "2019-04-03T11:58:41Z",
    "0.1.2-preview": "2019-04-03T11:58:38Z"
  }
}
