{
  "_id": "com.unity.netcode.gameobjects",
  "name": "com.unity.netcode.gameobjects",
  "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
  "provider": "upm",
  "category": "",
  "dist-tags": {
    "latest": "1.5.1"
  },
  "versions": {
    "1.5.1": {
      "unity": "2020.3",
      "_upm": {
        "changelog": "### Added\n\n- Added support for serializing `NativeArray<>` and `NativeList<>` in `FastBufferReader`/`FastBufferWriter`, `BufferSerializer`, `NetworkVariable`, and RPCs. (To use `NativeList<>`, add `UNITY_NETCODE_NATIVE_COLLECTION_SUPPORT` to your Scripting Define Symbols in `Project Settings > Player`) (#2375)\n- The location of the automatically-created default network prefab list can now be configured (#2544)\n- Added: Message size limits (max single message and max fragmented message) can now be set using NetworkManager.MaximumTransmissionUnitSize and NetworkManager.MaximumFragmentedMessageSize for transports that don't work with the default values (#2530)\n- Added `NetworkObject.SpawnWithObservers` property (default is true) that when set to false will spawn a `NetworkObject` with no observers and will not be spawned on any client until `NetworkObject.NetworkShow` is invoked. (#2568)\n\n### Fixed\n\n- Fixed: Fixed a null reference in codegen in some projects (#2581)\n- Fixed issue where the `OnClientDisconnected` client identifier was incorrect after a pending client connection was denied. (#2569)\n- Fixed warning \"Runtime Network Prefabs was not empty at initialization time.\" being erroneously logged when no runtime network prefabs had been added (#2565)\n- Fixed issue where some temporary debug console logging was left in a merged PR. (#2562)\n- Fixed the \"Generate Default Network Prefabs List\" setting not loading correctly and always reverting to being checked. (#2545)\n- Fixed issue where users could not use NetworkSceneManager.VerifySceneBeforeLoading to exclude runtime generated scenes from client synchronization. (#2550)\n- Fixed missing value on `NetworkListEvent` for `EventType.RemoveAt` events.  (#2542,#2543)\n- Fixed issue where parenting a NetworkTransform under a transform with a scale other than Vector3.one would result in incorrect values on non-authoritative instances. (#2538)\n- Fixed issue where a server would include scene migrated and then despawned NetworkObjects to a client that was being synchronized. (#2532)\n- Fixed the inspector throwing exceptions when attempting to render `NetworkVariable`s of enum types. (#2529)\n- Making a `NetworkVariable` with an `INetworkSerializable` type that doesn't meet the `new()` constraint will now create a compile-time error instead of an editor crash (#2528)\n- Fixed Multiplayer Tools package installation docs page link on the NetworkManager popup. (#2526)\n- Fixed an exception and error logging when two different objects are shown and hidden on the same frame (#2524)\n- Fixed a memory leak in `UnityTransport` that occurred if `StartClient` failed. (#2518)\n- Fixed issue where a client could throw an exception if abruptly disconnected from a network session with one or more spawned `NetworkObject`(s). (#2510)\n- Fixed issue where invalid endpoint addresses were not being detected and returning false from NGO UnityTransport. (#2496)\n- Fixed some errors that could occur if a connection is lost and the loss is detected when attempting to write to the socket. (#2495)\n\n## Changed\n\n- Adding network prefabs before NetworkManager initialization is now supported. (#2565)\n- Connecting clients being synchronized now switch to the server's active scene before spawning and synchronizing NetworkObjects. (#2532)\n- Updated `UnityTransport` dependency on `com.unity.transport` to 1.3.4. (#2533)\n- Improved performance of NetworkBehaviour initialization by replacing reflection when initializing NetworkVariables with compile-time code generation, which should help reduce hitching during additive scene loads. (#2522)"
      },
      "upmCi": {
        "footprint": "35c5325acc3edf18c37ef8c9d19e0944fae0d42a"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode.gameobjects@1.5/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "7a969f89d6dda65ac373ce552c0c997c9116f21a"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "dist": {
        "shasum": "e500cbd52b887ac300383b3ec10cb0aa4a68c241",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.5.1.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.5.1",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "assets",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.3.4"
      }
    },
    "1.4.0": {
      "unity": "2020.3",
      "_upm": {
        "changelog": "### Added\n\n- Added a way to access the GlobalObjectIdHash via PrefabIdHash for use in the Connection Approval Callback. (#2437)\n- Added `OnServerStarted` and `OnServerStopped` events that will trigger only on the server (or host player) to notify that the server just started or is no longer active (#2420)\n- Added `OnClientStarted` and `OnClientStopped` events that will trigger only on the client (or host player) to notify that the client just started or is no longer active (#2420)\n- Added `NetworkTransform.UseHalfFloatPrecision` property that, when enabled, will use half float values for position, rotation, and scale. This yields a 50% bandwidth savings a the cost of precision. (#2388)\n- Added `NetworkTransform.UseQuaternionSynchronization` property that, when enabled, will synchronize the entire quaternion. (#2388)\n- Added `NetworkTransform.UseQuaternionCompression` property that, when enabled, will use a smallest three implementation reducing a full quaternion synchronization update to the size of an unsigned integer. (#2388)\n- Added `NetworkTransform.SlerpPosition` property that, when enabled along with interpolation being enabled, will interpolate using `Vector3.Slerp`. (#2388)\n- Added `BufferedLinearInterpolatorVector3` that replaces the float version, is now used by `NetworkTransform`, and provides the ability to enable or disable `Slerp`. (#2388)\n- Added `HalfVector3` used for scale when half float precision is enabled. (#2388)\n- Added `HalfVector4` used for rotation when half float precision and quaternion synchronization is enabled. (#2388)\n- Added `HalfVector3DeltaPosition` used for position when half float precision is enabled. This handles loss in position precision by updating only the delta position as opposed to the full position. (#2388)\n- Added `NetworkTransform.GetSpaceRelativePosition` and `NetworkTransform.GetSpaceRelativeRotation` helper methods to return the proper values depending upon whether local or world space. (#2388)\n- Added `NetworkTransform.OnAuthorityPushTransformState` virtual method that is invoked just prior to sending the `NetworkTransformState` to non-authoritative instances. This provides users with the ability to obtain more precise delta values for prediction related calculations. (#2388)\n- Added `NetworkTransform.OnNetworkTransformStateUpdated` virtual method that is invoked just after the authoritative `NetworkTransformState` is applied. This provides users with the ability to obtain more precise delta values for prediction related calculations. (#2388)\n- Added `NetworkTransform.OnInitialize`virtual method that is invoked after the `NetworkTransform` has been initialized or re-initialized when ownership changes. This provides for a way to make adjustments when `NetworkTransform` is initialized (i.e. resetting client prediction etc) (#2388)\n- Added `NetworkObject.SynchronizeTransform` property (default is true) that provides users with another way to help with bandwidth optimizations where, when set to false, the `NetworkObject`'s associated transform will not be included when spawning and/or synchronizing late joining players. (#2388)\n- Added `NetworkSceneManager.ActiveSceneSynchronizationEnabled` property, disabled by default, that enables client synchronization of server-side active scene changes. (#2383)\n- Added `NetworkObject.ActiveSceneSynchronization`, disabled by default, that will automatically migrate a `NetworkObject` to a newly assigned active scene. (#2383)\n- Added `NetworkObject.SceneMigrationSynchronization`, enabled by default, that will synchronize client(s) when a `NetworkObject` is migrated into a new scene on the server side via `SceneManager.MoveGameObjectToScene`. (#2383)\n\n### Changed\n\n- Made sure the `CheckObjectVisibility` delegate is checked and applied, upon `NetworkShow` attempt. Found while supporting (#2454), although this is not a fix for this (already fixed) issue. (#2463)\n- Changed `NetworkTransform` authority handles delta checks on each new network tick and no longer consumes processing cycles checking for deltas for all frames in-between ticks. (#2388)\n- Changed the `NetworkTransformState` structure is now public and now has public methods that provide access to key properties of the `NetworkTransformState` structure. (#2388)\n- Changed `NetworkTransform` interpolation adjusts its interpolation \"ticks ago\" to be 2 ticks latent if it is owner authoritative and the instance is not the server or 1 tick latent if the instance is the server and/or is server authoritative. (#2388)\n- Updated `NetworkSceneManager` to migrate dynamically spawned `NetworkObject`s with `DestroyWithScene` set to false into the active scene if their current scene is unloaded. (#2383)\n- Updated the server to synchronize its local `NetworkSceneManager.ClientSynchronizationMode` during the initial client synchronization. (#2383)\n\n### Fixed\n\n- Fixed issue where during client synchronization the synchronizing client could receive a ObjectSceneChanged message before the client-side NetworkObject instance had been instantiated and spawned. (#2502)\n- Fixed issue where `NetworkAnimator` was building client RPC parameters to exclude the host from sending itself messages but was not including it in the ClientRpc parameters. (#2492)\n- Fixed issue where `NetworkAnimator` was not properly detecting and synchronizing cross fade initiated transitions. (#2481)\n- Fixed issue where `NetworkAnimator` was not properly synchronizing animation state updates. (#2481)\n- Fixed float NetworkVariables not being rendered properly in the inspector of NetworkObjects. (#2441)\n- Fixed an issue where Named Message Handlers could remove themselves causing an exception when the metrics tried to access the name of the message.(#2426)\n- Fixed registry of public `NetworkVariable`s in derived `NetworkBehaviour`s (#2423)\n- Fixed issue where runtime association of `Animator` properties to `AnimationCurve`s would cause `NetworkAnimator` to attempt to update those changes. (#2416)\n- Fixed issue where `NetworkAnimator` would not check if its associated `Animator` was valid during serialization and would spam exceptions in the editor console. (#2416)\n- Fixed issue with a child's rotation rolling over when interpolation is enabled on a `NetworkTransform`. Now using half precision or full quaternion synchronization will always update all axis. (#2388)\n- Fixed issue where `NetworkTransform` was not setting the teleport flag when the `NetworkTransform.InLocalSpace` value changed. This issue only impacted `NetworkTransform` when interpolation was enabled. (#2388)\n- Fixed issue when the `NetworkSceneManager.ClientSynchronizationMode` is `LoadSceneMode.Additive` and the server changes the currently active scene prior to a client connecting then upon a client connecting and being synchronized the NetworkSceneManager would clear its internal ScenePlacedObjects list that could already be populated. (#2383)\n- Fixed issue where a client would load duplicate scenes of already preloaded scenes during the initial client synchronization and `NetworkSceneManager.ClientSynchronizationMode` was set to `LoadSceneMode.Additive`. (#2383)"
      },
      "upmCi": {
        "footprint": "dad9d9cf0a4704c51c7f587ac264ae49fe2efa1f"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode.gameobjects@1.4/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "a418eabe59ed5f5e918d1756ee051436d2819828"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "dist": {
        "shasum": "b2e1b9169ca542da893c9100a358b25a68dafa3b",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.4.0.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.4.0",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.3.3"
      }
    },
    "1.3.1": {
      "unity": "2020.3",
      "_upm": {
        "changelog": "### Added\n\n- Added detection and graceful handling of corrupt packets for additional safety. (#2419)\n\n### Changed\n\n- The UTP component UI has been updated to be more user-friendly for new users by adding a simple toggle to switch between local-only (127.0.0.1) and remote (0.0.0.0) binding modes, using the toggle \"Allow Remote Connections\" (#2408)\n- Updated `UnityTransport` dependency on `com.unity.transport` to 1.3.3. (#2450)\n- `NetworkShow()` of `NetworkObject`s are delayed until the end of the frame to ensure consistency of delta-driven variables like `NetworkList`.\n- Dirty `NetworkObject` are reset at end-of-frame and not at serialization time.\n- `NetworkHide()` of an object that was just `NetworkShow()`n produces a warning, as remote clients will _not_ get a spawn/despawn pair.\n- Renamed the NetworkTransform.SetState parameter `shouldGhostsInterpolate` to `teleportDisabled` for better clarity of what that parameter does. (#2228)\n- Network prefabs are now stored in a ScriptableObject that can be shared between NetworkManagers, and have been exposed for public access. By default, a Default Prefabs List is created that contains all NetworkObject prefabs in the project, and new NetworkManagers will default to using that unless that option is turned off in the Netcode for GameObjects settings. Existing NetworkManagers will maintain their existing lists, which can be migrated to the new format via a button in their inspector. (#2322)\n\n### Fixed\n\n- Fixed issue where changes to a layer's weight would not synchronize unless a state transition was occurring.(#2399)\n- Fixed issue where `NetworkManager.LocalClientId` was returning the `NetworkTransport.ServerClientId` as opposed to the `NetworkManager.m_LocalClientId`. (#2398)\n- Fixed issue where a dynamically spawned `NetworkObject` parented under an in-scene placed `NetworkObject` would have its `InScenePlaced` value changed to `true`. This would result in a soft synchronization error for late joining clients. (#2396)\n- Fixed a UTP test that was failing when you install Unity Transport package 2.0.0 or newer. (#2347)\n- Fixed issue where `NetcodeSettingsProvider` would throw an exception in Unity 2020.3.x versions. (#2345)\n- Fixed server side issue where, depending upon component ordering, some NetworkBehaviour components might not have their OnNetworkDespawn method invoked if the client side disconnected. (#2323)\n- Fixed a case where data corruption could occur when using UnityTransport when reaching a certain level of send throughput. (#2332)\n- Fixed an issue in `UnityTransport` where an exception would be thrown if starting a Relay host/server on WebGL. This exception should only be thrown if using direct connections (where WebGL can't act as a host/server). (#2321)\n- Fixed `NetworkAnimator` issue where it was not checking for `AnimatorStateTtansition.destinationStateMachine` and any possible sub-states defined within it. (#2309)\n- Fixed `NetworkAnimator` issue where the host client was receiving the ClientRpc animation updates when the host was the owner.(#2309)\n- Fixed `NetworkAnimator` issue with using pooled objects and when specific properties are cleaned during despawn and destroy.(#2309)\n- Fixed issue where `NetworkAnimator` was checking for animation changes when the associated `NetworkObject` was not spawned.(#2309)\n- Corrected an issue with the documentation for BufferSerializer (#2401)"
      },
      "upmCi": {
        "footprint": "edebf4ce36d2ecd3e2a7632dbf88da8cbc89aa50"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode.gameobjects@1.3/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "469b46fabe1a78032a31ab04a15490a6912dadfb"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "dist": {
        "shasum": "3d75a402a464c495c399acdc6bbfcaecd45e527a",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.3.1.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.3.1",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.3.3"
      }
    },
    "1.2.0": {
      "unity": "2020.3",
      "upmCi": {
        "footprint": "4160b9a4b03a930793225fd4767f2b00fee62c79"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode.gameobjects@1.2/manual/index.html",
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "789f0930ead8e5ba27e123323f407d6f3393aa7b"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "dist": {
        "shasum": "dd108ea7e342e1371ba042614870a504875db6c2",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.2.0.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.2.0",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.3.0"
      }
    },
    "1.1.0": {
      "unity": "2020.3",
      "upmCi": {
        "footprint": "4d959c429b2aabd0ba04a6a1a4e1c5e352e6366f"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "2c69184e5f85a025455c415145be3eeecbf98446"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "dist": {
        "shasum": "4c82bb0b29728e93187a7419ecac826f3ccb238c",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.1.0.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.1.0",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.3.0"
      }
    },
    "1.0.2": {
      "unity": "2020.3",
      "upmCi": {
        "footprint": "01764b7751e27d1e2af672c49cec3ed5691b53b7"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "fe0c300aa691f31d2aec1d4b73e2971f28122d3b"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "dist": {
        "shasum": "223730174cc72ba2de9e2d3c8e0f8893859fcb90",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.2.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.2",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.2.0"
      }
    },
    "1.0.1": {
      "unity": "2020.3",
      "upmCi": {
        "footprint": "8824c99a21c438135052b8a8d42b6a8cb865bea3"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "ce1ab3ca9495caf3f906d8ca5459677614214837"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "dist": {
        "shasum": "48356cddd011bf7a3ef78728015b51dfa9a1ddf6",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.1.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.1",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.2.0"
      }
    },
    "1.0.0": {
      "unity": "2020.3",
      "_upm": {
        "changelog": "### Changed\n\n- Changed version to 1.0.0. (#2046)"
      },
      "upmCi": {
        "footprint": "382d762a40cdcb42ebaf495e373effb00362baf1"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "fddb7cd920e1db9e49d44846d7121e38f59bd137"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "_id": "com.unity.netcode.gameobjects@1.0.0",
      "_integrity": "sha512-6NjRRaNiEVPQdXiA4AC1twL9Ouzv3KP5qGBSugIUptif2xMYnFV1OYzedwGY2zunpPSUIEQzVa28Vw2g/UdneQ==",
      "_resolved": "/tmp/com.unity.netcode.gameobjects@1.0.0-x97rd3m_.tgz",
      "_from": "file:/tmp/com.unity.netcode.gameobjects@1.0.0-x97rd3m_.tgz",
      "dist": {
        "shasum": "33f08fc87c96e8eb4b106cad952d10382c093211",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.0.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.0",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.1.0"
      }
    },
    "1.0.0-pre.10": {
      "unity": "2020.3",
      "_upm": {
        "changelog": "### Added\n\n- Added a new `OnTransportFailure` callback to `NetworkManager`. This callback is invoked when the manager's `NetworkTransport` encounters an unrecoverable error. Transport failures also cause the `NetworkManager` to shut down. Currently, this is only used by `UnityTransport` to signal a timeout of its connection to the Unity Relay servers. (#1994)\n- Added `NetworkEvent.TransportFailure`, which can be used by implementations of `NetworkTransport` to signal to `NetworkManager` that an unrecoverable error was encountered. (#1994)\n- Added test to ensure a warning occurs when nesting NetworkObjects in a NetworkPrefab (#1969)\n- Added `NetworkManager.RemoveNetworkPrefab(...)` to remove a prefab from the prefabs list (#1950)\n\n### Changed\n\n- Updated `UnityTransport` dependency on `com.unity.transport` to 1.1.0. (#2025)\n- (API Breaking) `ConnectionApprovalCallback` is no longer an `event` and will not allow more than 1 handler registered at a time. Also, `ConnectionApprovalCallback` is now a `Func<>` taking `ConnectionApprovalRequest` in and returning `ConnectionApprovalResponse` back out (#1972)\n\n### Removed\n\n### Fixed\n- Fixed issue where dynamically spawned `NetworkObject`s could throw an exception if the scene of origin handle was zero (0) and the `NetworkObject` was already spawned. (#2017)\n- Fixed issue where `NetworkObject.Observers` was not being cleared when despawned. (#2009)\n- Fixed `NetworkAnimator` could not run in the server authoritative mode. (#2003)\n- Fixed issue where late joining clients would get a soft synchronization error if any in-scene placed NetworkObjects were parented under another `NetworkObject`. (#1985)\n- Fixed issue where `NetworkBehaviourReference` would throw a type cast exception if using `NetworkBehaviourReference.TryGet` and the component type was not found. (#1984)\n- Fixed `NetworkSceneManager` was not sending scene event notifications for the currently active scene and any additively loaded scenes when loading a new scene in `LoadSceneMode.Single` mode. (#1975)\n- Fixed issue where one or more clients disconnecting during a scene event would cause `LoadEventCompleted` or `UnloadEventCompleted` to wait until the `NetworkConfig.LoadSceneTimeOut` period before being triggered. (#1973)\n- Fixed issues when multiple `ConnectionApprovalCallback`s were registered (#1972)\n- Fixed a regression in serialization support: `FixedString`, `Vector2Int`, and `Vector3Int` types can now be used in NetworkVariables and RPCs again without requiring a `ForceNetworkSerializeByMemcpy<>` wrapper. (#1961)\n- Fixed generic types that inherit from NetworkBehaviour causing crashes at compile time. (#1976)\n- Fixed endless dialog boxes when adding a `NetworkBehaviour` to a `NetworkManager` or vice-versa. (#1947)\n- Fixed `NetworkAnimator` issue where it was only synchronizing parameters if the layer or state changed or was transitioning between states. (#1946)\n- Fixed `NetworkAnimator` issue where when it did detect a parameter had changed it would send all parameters as opposed to only the parameters that changed. (#1946)\n- Fixed `NetworkAnimator` issue where it was not always disposing the `NativeArray` that is allocated when spawned. (#1946)\n- Fixed `NetworkAnimator` issue where it was not taking the animation speed or state speed multiplier into consideration. (#1946)\n- Fixed `NetworkAnimator` issue where it was not properly synchronizing late joining clients if they joined while `Animator` was transitioning between states. (#1946)\n- Fixed `NetworkAnimator` issue where the server was not relaying changes to non-owner clients when a client was the owner. (#1946)\n- Fixed issue where the `PacketLoss` metric for tools would return the packet loss over a connection lifetime instead of a single frame. (#2004)"
      },
      "upmCi": {
        "footprint": "13bd9771fd94050d43c32b238d73617da4b2389d"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "d1302ce0b946a675f49425dbd11ee2c4afe89d3f"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "_id": "com.unity.netcode.gameobjects@1.0.0-pre.10",
      "_integrity": "sha512-4MNt3riqnSfl5/U3ewRmUxqPl1NZmATe3EhKFDxqD3JC3FSFQQdOEblyNSISAD0dEjltLwMSaMcMEQaAhcBy2g==",
      "_resolved": "/tmp/com.unity.netcode.gameobjects@1.0.0-pre.10-w5ctcl2r.tgz",
      "_from": "file:/tmp/com.unity.netcode.gameobjects@1.0.0-pre.10-w5ctcl2r.tgz",
      "dist": {
        "shasum": "296f0daa3d701c5e4b3273c443f903cc0ac44328",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.0-pre.10.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.0-pre.10",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.1.0"
      }
    },
    "1.0.0-pre.9": {
      "unity": "2020.3",
      "_upm": {
        "changelog": "### Fixed\n\n- Fixed Hosting again after failing to host now works correctly (#1938)\n- Fixed NetworkManager to cleanup connected client lists after stopping (#1945)\n- Fixed NetworkHide followed by NetworkShow on the same frame works correctly (#1940)"
      },
      "upmCi": {
        "footprint": "ed33b1bdf8c343399eadd7640f4e9caa4ed07776"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "cdca1eb844973e9f314f6a263bb4c0497d9e396f"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "_id": "com.unity.netcode.gameobjects@1.0.0-pre.9",
      "_integrity": "sha512-vKXL7UjNfUd+d/+ILqqZtEl+Mn8ADZN5jrr4Qun6mHn4nq0FZX4s2+u6Q5V96a8ORi09d7JYX+Go4+X+D2XaAg==",
      "_resolved": "/tmp/com.unity.netcode.gameobjects@1.0.0-pre.9-6j8x0c4y.tgz",
      "_from": "file:/tmp/com.unity.netcode.gameobjects@1.0.0-pre.9-6j8x0c4y.tgz",
      "dist": {
        "shasum": "02cd33215ef1e2ccbb0c0f7c3b6315965b503e6f",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.0-pre.9.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.0-pre.9",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.0.0"
      }
    },
    "1.0.0-pre.8": {
      "unity": "2020.3",
      "_upm": {
        "changelog": "### Changed\n\n- `unmanaged` structs are no longer universally accepted as RPC parameters because some structs (i.e., structs with pointers in them, such as `NativeList<T>`) can't be supported by the default memcpy struct serializer. Structs that are intended to be serialized across the network must add `INetworkSerializeByMemcpy` to the interface list (i.e., `struct Foo : INetworkSerializeByMemcpy`). This interface is empty and just serves to mark the struct as compatible with memcpy serialization. For external structs you can't edit, you can pass them to RPCs by wrapping them in `ForceNetworkSerializeByMemcpy<T>`. (#1901)\n\n### Removed\n- Removed `SIPTransport` (#1870)\n\n- Removed `ClientNetworkTransform` from the package samples and moved to Boss Room's Utilities package which can be found [here](https://github.com/Unity-Technologies/com.unity.multiplayer.samples.coop/blob/main/Packages/com.unity.multiplayer.samples.coop/Utilities/Net/ClientAuthority/ClientNetworkTransform.cs).\n\n### Fixed\n\n- Fixed `NetworkTransform` generating false positive rotation delta checks when rolling over between 0 and 360 degrees. (#1890)\n- Fixed client throwing an exception if it has messages in the outbound queue when processing the `NetworkEvent.Disconnect` event and is using UTP. (#1884)\n- Fixed issue during client synchronization if 'ValidateSceneBeforeLoading' returned false it would halt the client synchronization process resulting in a client that was approved but not synchronized or fully connected with the server. (#1883)\n- Fixed an issue where UNetTransport.StartServer would return success even if the underlying transport failed to start (#854)\n- Passing generic types to RPCs no longer causes a native crash (#1901)\n- Fixed an issue where calling `Shutdown` on a `NetworkManager` that was already shut down would cause an immediate shutdown the next time it was started (basically the fix makes `Shutdown` idempotent). (#1877)"
      },
      "upmCi": {
        "footprint": "7593dccd41bcdc7887dea63f675cdee7400ee3dc"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "437d82ad0f11faa22e9f2539dddd3c5dda798a36"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        }
      ],
      "_id": "com.unity.netcode.gameobjects@1.0.0-pre.8",
      "_integrity": "sha512-rMEQGI5b/OWRQ1V/qkV/iFAklvdCfniaFvBL/eTNfW3Jyg+DEsdlMiqbErgX2QzMdnnLmmfFZxKBXUo4NcBZHg==",
      "_resolved": "/tmp/com.unity.netcode.gameobjects@1.0.0-pre.8-x4cualaf.tgz",
      "_from": "file:/tmp/com.unity.netcode.gameobjects@1.0.0-pre.8-x4cualaf.tgz",
      "dist": {
        "shasum": "528799057acfd5faaf9d8fc2d40bf33faa9cea72",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.0-pre.8.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.0-pre.8",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.0.0"
      }
    },
    "1.0.0-pre.7": {
      "unity": "2020.3",
      "upm": {
        "changelog": "### Added\n\n- Added editor only check prior to entering into play mode if the currently open and active scene is in the build list and if not displays a dialog box asking the user if they would like to automatically add it prior to entering into play mode. (#1828)\n- Added `UnityTransport` implementation and `com.unity.transport` package dependency (#1823)\n- Added `NetworkVariableWritePermission` to `NetworkVariableBase` and implemented `Owner` client writable netvars. (#1762)\n- `UnityTransport` settings can now be set programmatically. (#1845)\n- `FastBufferWriter` and Reader IsInitialized property. (#1859)\n\n### Changed\n\n- Updated `UnityTransport` dependency on `com.unity.transport` to 1.0.0 (#1849)\n\n### Removed\n\n- Removed `SnapshotSystem` (#1852)\n- Removed `com.unity.modules.animation`, `com.unity.modules.physics` and `com.unity.modules.physics2d` dependencies from the package (#1812)\n- Removed `com.unity.collections` dependency from the package (#1849)\n\n### Fixed\n- Fixed in-scene placed NetworkObjects not being found/ignored after a client disconnects and then reconnects. (#1850)\n- Fixed issue where `UnityTransport` send queues were not flushed when calling `DisconnectLocalClient` or `DisconnectRemoteClient`. (#1847)\n- Fixed NetworkBehaviour dependency verification check for an existing NetworkObject not searching from root parent transform relative GameObject. (#1841)\n- Fixed issue where entries were not being removed from the NetworkSpawnManager.OwnershipToObjectsTable. (#1838)\n- Fixed ClientRpcs would always send to all connected clients by default as opposed to only sending to the NetworkObject's Observers list by default. (#1836)\n- Fixed clarity for NetworkSceneManager client side notification when it receives a scene hash value that does not exist in its local hash table. (#1828)\n- Fixed client throws a key not found exception when it times out using UNet or UTP. (#1821)\n- Fixed network variable updates are no longer limited to 32,768 bytes when NetworkConfig.EnsureNetworkVariableLengthSafety is enabled. The limits are now determined by what the transport can send in a message. (#1811)\n- Fixed in-scene NetworkObjects get destroyed if a client fails to connect and shuts down the NetworkManager. (#1809)\n- Fixed user never being notified in the editor that a NetworkBehaviour requires a NetworkObject to function properly. (#1808)\n- Fixed PlayerObjects and dynamically spawned NetworkObjects not being added to the NetworkClient's OwnedObjects (#1801)\n- Fixed issue where NetworkManager would continue starting even if the NetworkTransport selected failed. (#1780)\n- Fixed issue when spawning new player if an already existing player exists it does not remove IsPlayer from the previous player (#1779)\n- Fixed lack of notification that NetworkManager and NetworkObject cannot be added to the same GameObject with in-editor notifications (#1777)\n- Fixed parenting warning printing for false positives (#1855)"
      },
      "upmCi": {
        "footprint": "98c91bebf56ec13b76dfa5cf9d5d22946f7529cd"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "16420648a7790c64f917e000f7d0cdbe57350835"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        },
        {
          "displayName": "ClientNetworkTransform",
          "description": "A sample to demonstrate how client-driven NetworkTransform can be implemented",
          "path": "Samples~/ClientNetworkTransform"
        }
      ],
      "_id": "com.unity.netcode.gameobjects@1.0.0-pre.7",
      "_integrity": "sha512-0/XFGQcuWa/rVph07i8tp2EiHNLXYqp3jAE9iDVSx2WjTZILM7pUyaS0oRK5Tcgqy/wSWoNirzf8UbuHV300kw==",
      "_resolved": "/tmp/com.unity.netcode.gameobjects@1.0.0-pre.7-qydaeap8.tgz",
      "_from": "file:/tmp/com.unity.netcode.gameobjects@1.0.0-pre.7-qydaeap8.tgz",
      "dist": {
        "shasum": "eb02d4a581bd1efb107adea99f08113e711743ab",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.0-pre.7.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.0-pre.7",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.transport": "1.0.0"
      }
    },
    "1.0.0-pre.6": {
      "unity": "2020.3",
      "upm": {
        "changelog": "### Added,- NetworkAnimator now properly synchrhonizes all animation layers as well as runtime-adjusted weighting between them (#1765),- Added first set of tests for NetworkAnimator - parameter syncing, trigger set / reset, override network animator (#1735),### Changed,### Fixed,- Fixed an issue where sometimes the first client to connect to the server could see messages from the server as coming from itself. (#1683),- Fixed an issue where clients seemed to be able to send messages to ClientId 1, but these messages would actually still go to the server (id 0) instead of that client. (#1683),- Improved clarity of error messaging when a client attempts to send a message to a destination other than the server, which isn't allowed. (#1683),- Disallowed async keyword in RPCs (#1681),- Fixed an issue where Alpha release versions of Unity (version 2022.2.0a5 and later) will not compile due to the UNet Transport no longer existing (#1678),- Fixed messages larger than 64k being written with incorrectly truncated message size in header (#1686) (credit: @kaen),- Fixed overloading RPC methods causing collisions and failing on IL2CPP targets. (#1694),- Fixed spawn flow to propagate `IsSceneObject` down to children NetworkObjects, decouple implicit relationship between object spawning & `IsSceneObject` flag (#1685),- Fixed error when serializing ConnectionApprovalMessage with scene management disabled when one or more objects is hidden via the CheckObjectVisibility delegate (#1720),- Fixed CheckObjectVisibility delegate not being properly invoked for connecting clients when Scene Management is enabled. (#1680),- Fixed NetworkList to properly call INetworkSerializable's NetworkSerialize() method (#1682),- Fixed NetworkVariables containing more than 1300 bytes of data (such as large NetworkLists) no longer cause an OverflowException (the limit on data size is now whatever limit the chosen transport imposes on fragmented NetworkDelivery mechanisms) (#1725),- Fixed ServerRpcParams and ClientRpcParams must be the last parameter of an RPC in order to function properly. Added a compile-time check to ensure this is the case and trigger an error if they're placed elsewhere (#1721),- Fixed FastBufferReader being created with a length of 1 if provided an input of length 0 (#1724),- Fixed The NetworkConfig's checksum hash includes the NetworkTick so that clients with a different tickrate than the server are identified and not allowed to connect (#1728),- Fixed OwnedObjects not being properly modified when using ChangeOwnership (#1731),- Improved performance in NetworkAnimator (#1735),- Removed the \"always sync\" network animator (aka \"autosend\") parameters (#1746)"
      },
      "upmCi": {
        "footprint": "86275b5331ab1e0e0a176d177bcd429a69c058af"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "cc3c088aad2bfb1b3da51137057df65b882cad45"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        },
        {
          "displayName": "ClientNetworkTransform",
          "description": "A sample to demonstrate how client-driven NetworkTransform can be implemented",
          "path": "Samples~/ClientNetworkTransform"
        }
      ],
      "_id": "com.unity.netcode.gameobjects@1.0.0-pre.6",
      "_integrity": "sha512-t8Dx0Ewt3YEll6V/R2Ti7m9N6+db3QBOuImuBrqQqGK2ybDjm5Fqsbxt0Lf6Zuc0ArvT3TxznMg5CiBKPqK5lg==",
      "_resolved": "/tmp/com.unity.netcode.gameobjects@1.0.0-pre.6-kce9h2n8.tgz",
      "_from": "file:/tmp/com.unity.netcode.gameobjects@1.0.0-pre.6-kce9h2n8.tgz",
      "dist": {
        "shasum": "dd0ac314d899d54bdb4a6a7ea6f020ee68625852",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.0-pre.6.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.0-pre.6",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.modules.animation": "1.0.0",
        "com.unity.modules.physics": "1.0.0",
        "com.unity.modules.physics2d": "1.0.0",
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.collections": "1.1.0"
      }
    },
    "1.0.0-pre.5": {
      "unity": "2020.3",
      "upmCi": {
        "footprint": "770504b1f691c766a300b616c1d8106335265f3c"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "d1f990d97b80d49ce12fce7357cbd5f6b794ce01"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        },
        {
          "displayName": "ClientNetworkTransform",
          "description": "A sample to demonstrate how client-driven NetworkTransform can be implemented",
          "path": "Samples~/ClientNetworkTransform"
        }
      ],
      "_id": "com.unity.netcode.gameobjects@1.0.0-pre.5",
      "_integrity": "sha512-/oE0an4WLEaeEzxYbc8hFsAakL6kjOouIcTIvoyrUxpM5PPQwyCHLxMeHATaJP9XkAl05mz+jSCGIblYRb68GA==",
      "_resolved": "/tmp/com.unity.netcode.gameobjects@1.0.0-pre.5-s_z3dk35.tgz",
      "_from": "file:/tmp/com.unity.netcode.gameobjects@1.0.0-pre.5-s_z3dk35.tgz",
      "dist": {
        "shasum": "6fd3d6d0d0f198bdf47e04c926a56d16a8e1dc70",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.0-pre.5.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.0-pre.5",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.modules.animation": "1.0.0",
        "com.unity.modules.physics": "1.0.0",
        "com.unity.modules.physics2d": "1.0.0",
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.collections": "1.1.0"
      }
    },
    "1.0.0-pre.4": {
      "unity": "2020.3",
      "upmCi": {
        "footprint": "28fd203207af71c78d6aaba679e94c5ead807529"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "b14204cd059fb90f4a64319824105619f317d591"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        },
        {
          "displayName": "ClientNetworkTransform",
          "description": "A sample to demonstrate how client-driven NetworkTransform can be implemented",
          "path": "Samples~/ClientNetworkTransform"
        }
      ],
      "_id": "com.unity.netcode.gameobjects@1.0.0-pre.4",
      "_integrity": "sha512-poyDTVTb+8DGwJJWrBuieAtwVTI0KOkXxZbNIaYGN+pmv/9cvLz1xhc/IebNXqpvdQyxNln3qT8WU1IY/Amxkw==",
      "_resolved": "/pkgprom/com.unity.netcode.gameobjects-1.0.0-pre.4.tgz",
      "_from": "file:com.unity.netcode.gameobjects-1.0.0-pre.4.tgz",
      "dist": {
        "shasum": "53fb4263693efe73dcb5f5100c6d631b86f437f4",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.0-pre.4.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.0-pre.4",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.modules.animation": "1.0.0",
        "com.unity.modules.physics": "1.0.0",
        "com.unity.modules.physics2d": "1.0.0",
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.collections": "1.1.0"
      }
    },
    "1.0.0-pre.3": {
      "unity": "2020.3",
      "upmCi": {
        "footprint": "883b3567bbb5155b7d06ef3c2cac755efa58a235"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "3e4df72dadeea8bd622da2824e30541910c79d3d"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        },
        {
          "displayName": "ClientNetworkTransform",
          "description": "A sample to demonstrate how client-driven NetworkTransform can be implemented",
          "path": "Samples~/ClientNetworkTransform"
        }
      ],
      "_id": "com.unity.netcode.gameobjects@1.0.0-pre.3",
      "_integrity": "sha512-bHPM2xuvwiQUHdd0nbvIRyWSy5zDwHTFDvwC+nS4TW3jxy2Is66ggb6RtZfn5uDR3rPpVu9wZQIT89Hf45yrDg==",
      "_resolved": "/pkgprom/com.unity.netcode.gameobjects-1.0.0-pre.3.tgz",
      "_from": "file:com.unity.netcode.gameobjects-1.0.0-pre.3.tgz",
      "dist": {
        "shasum": "51ce0dfd0fc167792dd5e506d1f322ef71b348a3",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.0-pre.3.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.0-pre.3",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.modules.ai": "1.0.0",
        "com.unity.modules.animation": "1.0.0",
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.collections": "1.0.0-pre.5"
      }
    },
    "1.0.0-pre.2": {
      "unity": "2020.3",
      "upmCi": {
        "footprint": "f3acafb35c17cf3cb48042bf9655c4ada00c34ae"
      },
      "repository": {
        "url": "https://github.com/Unity-Technologies/com.unity.netcode.gameobjects.git",
        "type": "git",
        "revision": "bcef5b992c5414707ff48c95a48a113fd0e09ad3"
      },
      "samples": [
        {
          "displayName": "Bootstrap",
          "description": "A lightweight sample to get started",
          "path": "Samples~/Bootstrap"
        },
        {
          "displayName": "ClientNetworkTransform",
          "description": "A sample to demonstrate how client-driven NetworkTransform can be implemented",
          "path": "Samples~/ClientNetworkTransform"
        }
      ],
      "_id": "com.unity.netcode.gameobjects@1.0.0-pre.2",
      "_integrity": "sha512-6Q9pvxLAHfCGjmISEuVMjjkN8QwXt+x+sRrSTWEYU25/t+zEMJK33wI9+gc0qvlcALZ8xWsfMI8HnarSNFmPjg==",
      "_resolved": "/pkgprom/com.unity.netcode.gameobjects-1.0.0-pre.2.tgz",
      "_from": "file:com.unity.netcode.gameobjects-1.0.0-pre.2.tgz",
      "dist": {
        "shasum": "e083030e43dc5c9ea787063d48bb3e2c3e7f7ac8",
        "tarball": "https://download.packages.unity.com/com.unity.netcode.gameobjects/-/com.unity.netcode.gameobjects-1.0.0-pre.2.tgz"
      },
      "name": "com.unity.netcode.gameobjects",
      "version": "1.0.0-pre.2",
      "description": "Netcode for GameObjects is a high-level netcode SDK that provides networking capabilities to GameObject/MonoBehaviour workflows within Unity and sits on top of underlying transport layer.",
      "displayName": "Netcode for GameObjects",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.modules.ai": "1.0.0",
        "com.unity.modules.animation": "1.0.0",
        "com.unity.nuget.mono-cecil": "1.10.1",
        "com.unity.collections": "1.0.0-pre.5"
      }
    }
  },
  "etag": "\"29c4bab174a115dc9e6d9a94aabc8f84\"",
  "time": {
    "1.5.1": "2023-06-12T15:10:30Z",
    "1.4.0": "2023-04-21T08:17:35Z",
    "1.3.1": "2023-04-03T12:52:29Z",
    "1.2.0": "2022-12-09T19:37:06Z",
    "1.1.0": "2022-10-20T09:28:51Z",
    "1.0.2": "2022-09-13T16:24:04Z",
    "1.0.1": "2022-08-25T16:02:37Z",
    "1.0.0": "2022-06-29T15:47:01Z",
    "1.0.0-pre.10": "2022-06-22T20:48:37Z",
    "1.0.0-pre.9": "2022-05-10T17:19:47Z",
    "1.0.0-pre.8": "2022-04-28T02:51:59Z",
    "1.0.0-pre.7": "2022-04-07T02:10:29Z",
    "1.0.0-pre.6": "2022-03-03T05:23:55Z",
    "1.0.0-pre.5": "2022-01-28T23:33:54Z",
    "1.0.0-pre.4": "2022-01-06T21:08:14Z",
    "1.0.0-pre.3": "2021-11-02T20:31:26Z",
    "1.0.0-pre.2": "2021-10-20T17:14:15Z"
  }
}
